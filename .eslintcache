[{"D:\\Project\\new\\inventory_fe\\src\\index.tsx":"1","D:\\Project\\new\\inventory_fe\\src\\reportWebVitals.ts":"2","D:\\Project\\new\\inventory_fe\\src\\App.tsx":"3","D:\\Project\\new\\inventory_fe\\src\\recoil\\index.ts":"4","D:\\Project\\new\\inventory_fe\\src\\pages\\index.ts":"5","D:\\Project\\new\\inventory_fe\\src\\api\\index.ts":"6","D:\\Project\\new\\inventory_fe\\src\\recoil\\account.ts":"7","D:\\Project\\new\\inventory_fe\\src\\pages\\Account.tsx":"8","D:\\Project\\new\\inventory_fe\\src\\api\\base.ts":"9","D:\\Project\\new\\inventory_fe\\src\\pages\\Pharmacy.tsx":"10","D:\\Project\\new\\inventory_fe\\src\\api\\account.ts":"11","D:\\Project\\new\\inventory_fe\\src\\api\\pharmacy.ts":"12","D:\\Project\\new\\inventory_fe\\src\\api\\inventoryPharmacy.ts":"13","D:\\Project\\new\\inventory_fe\\src\\models\\pharmacy.ts":"14","D:\\Project\\new\\inventory_fe\\src\\component\\Account\\index.ts":"15","D:\\Project\\new\\inventory_fe\\src\\models\\index.ts":"16","D:\\Project\\new\\inventory_fe\\src\\component\\Pharmacys\\index.ts":"17","D:\\Project\\new\\inventory_fe\\src\\models\\account.ts":"18","D:\\Project\\new\\inventory_fe\\src\\models\\doctor.ts":"19","D:\\Project\\new\\inventory_fe\\src\\component\\Account\\Login.tsx":"20","D:\\Project\\new\\inventory_fe\\src\\component\\Pharmacys\\FormProduct.tsx":"21","D:\\Project\\new\\inventory_fe\\src\\component\\Pharmacys\\InventoryOfPharmacy.tsx":"22","D:\\Project\\new\\inventory_fe\\src\\component\\Pharmacys\\SearchPharmacys.tsx":"23","D:\\Project\\new\\inventory_fe\\src\\component\\Pharmacys\\SearchProduct.tsx":"24","D:\\Project\\new\\inventory_fe\\src\\hooks\\account.tsx":"25","D:\\Project\\new\\inventory_fe\\src\\component\\shared\\Loading.tsx":"26","D:\\Project\\new\\inventory_fe\\src\\utils\\hooks\\useClickOutSide.tsx":"27","D:\\Project\\new\\inventory_fe\\src\\component\\shared\\index.ts":"28","D:\\Project\\new\\inventory_fe\\src\\utils\\index.ts":"29","D:\\Project\\new\\inventory_fe\\src\\utils\\hooks\\index.ts":"30","D:\\Project\\new\\inventory_fe\\src\\utils\\regex.ts":"31","D:\\Project\\new\\inventory_fe\\src\\utils\\formaters.ts":"32","D:\\Project\\new\\inventory_fe\\src\\component\\shared\\Button.tsx":"33","D:\\Project\\new\\inventory_fe\\src\\component\\shared\\Header.tsx":"34","D:\\Project\\new\\inventory_fe\\src\\utils\\hooks\\useQuery.tsx":"35","D:\\Project\\new\\inventory_fe\\src\\utils\\hooks\\useAsync.tsx":"36","D:\\Project\\new\\inventory_fe\\src\\utils\\helpers.ts":"37","D:\\Project\\new\\inventory_fe\\src\\api\\product.ts":"38","D:\\Project\\new\\inventory_fe\\src\\models\\product.ts":"39","D:\\Project\\new\\inventory_fe\\src\\hooks\\pharmacy.tsx":"40","D:\\Project\\new\\inventory_fe\\src\\recoil\\pharmacy.ts":"41","D:\\Project\\new\\inventory_fe\\src\\config\\index.ts":"42"},{"size":636,"mtime":1616487987021,"results":"43","hashOfConfig":"44"},{"size":440,"mtime":1616210733935,"results":"45","hashOfConfig":"44"},{"size":737,"mtime":1616485769348,"results":"46","hashOfConfig":"44"},{"size":42,"mtime":1616210733935,"results":"47","hashOfConfig":"44"},{"size":99,"mtime":1616210733932,"results":"48","hashOfConfig":"44"},{"size":141,"mtime":1616397175212,"results":"49","hashOfConfig":"44"},{"size":188,"mtime":1616472268037,"results":"50","hashOfConfig":"44"},{"size":665,"mtime":1616485774562,"results":"51","hashOfConfig":"44"},{"size":409,"mtime":1616470430442,"results":"52","hashOfConfig":"44"},{"size":967,"mtime":1616485707677,"results":"53","hashOfConfig":"44"},{"size":904,"mtime":1616473209047,"results":"54","hashOfConfig":"44"},{"size":890,"mtime":1616380984978,"results":"55","hashOfConfig":"44"},{"size":2059,"mtime":1616380984977,"results":"56","hashOfConfig":"44"},{"size":5076,"mtime":1616380984998,"results":"57","hashOfConfig":"44"},{"size":43,"mtime":1616210733915,"results":"58","hashOfConfig":"44"},{"size":110,"mtime":1616470430447,"results":"59","hashOfConfig":"44"},{"size":254,"mtime":1616380984995,"results":"60","hashOfConfig":"44"},{"size":224,"mtime":1616213240578,"results":"61","hashOfConfig":"44"},{"size":900,"mtime":1616224796380,"results":"62","hashOfConfig":"44"},{"size":4354,"mtime":1616380984979,"results":"63","hashOfConfig":"44"},{"size":6028,"mtime":1616485310058,"results":"64","hashOfConfig":"44"},{"size":6776,"mtime":1616474416588,"results":"65","hashOfConfig":"44"},{"size":5831,"mtime":1616482114140,"results":"66","hashOfConfig":"44"},{"size":6177,"mtime":1616481750974,"results":"67","hashOfConfig":"44"},{"size":558,"mtime":1616228217363,"results":"68","hashOfConfig":"44"},{"size":136,"mtime":1616234484783,"results":"69","hashOfConfig":"44"},{"size":707,"mtime":1616396035164,"results":"70","hashOfConfig":"44"},{"size":90,"mtime":1616225491780,"results":"71","hashOfConfig":"44"},{"size":110,"mtime":1616380985005,"results":"72","hashOfConfig":"44"},{"size":89,"mtime":1616380985001,"results":"73","hashOfConfig":"44"},{"size":189,"mtime":1616210733938,"results":"74","hashOfConfig":"44"},{"size":291,"mtime":1616210733937,"results":"75","hashOfConfig":"44"},{"size":418,"mtime":1616225524310,"results":"76","hashOfConfig":"44"},{"size":723,"mtime":1616490734706,"results":"77","hashOfConfig":"44"},{"size":136,"mtime":1616380985004,"results":"78","hashOfConfig":"44"},{"size":1518,"mtime":1616380985002,"results":"79","hashOfConfig":"44"},{"size":526,"mtime":1616380985000,"results":"80","hashOfConfig":"44"},{"size":927,"mtime":1616481930577,"results":"81","hashOfConfig":"44"},{"size":2658,"mtime":1616483986960,"results":"82","hashOfConfig":"44"},{"size":767,"mtime":1616487882117,"results":"83","hashOfConfig":"44"},{"size":212,"mtime":1616472243445,"results":"84","hashOfConfig":"44"},{"size":127,"mtime":1616473330159,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"8j4m4n",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"D:\\Project\\new\\inventory_fe\\src\\index.tsx",[],["180","181"],"D:\\Project\\new\\inventory_fe\\src\\reportWebVitals.ts",[],"D:\\Project\\new\\inventory_fe\\src\\App.tsx",["182","183"],"import React, { useEffect } from 'react';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport { getAccountInfo } from './api';\r\nimport { Account } from './pages';\r\nimport { Pharmacys } from './pages';\r\nimport { accountState } from './recoil';\r\n\r\nconst App: React.FC = React.memo(() => {\r\n    const [ accountDataState, setAccountDataState ] = useRecoilState(accountState.accountDataState)\r\n\r\n    useEffect(() => {\r\n        const accountInfo = getAccountInfo()\r\n\r\n        if (accountInfo?.loginSession?.mToken) {\r\n            setAccountDataState(accountInfo)\r\n        }\r\n    }, [])\r\n\r\n    if (accountDataState.loginSession?.mToken) {\r\n        return <Pharmacys />\r\n    }\r\n\r\n    return <Account />\r\n})\r\n\r\nexport default App;\r\n","D:\\Project\\new\\inventory_fe\\src\\recoil\\index.ts",[],"D:\\Project\\new\\inventory_fe\\src\\pages\\index.ts",[],"D:\\Project\\new\\inventory_fe\\src\\api\\index.ts",[],"D:\\Project\\new\\inventory_fe\\src\\recoil\\account.ts",[],"D:\\Project\\new\\inventory_fe\\src\\pages\\Account.tsx",[],"D:\\Project\\new\\inventory_fe\\src\\api\\base.ts",[],"D:\\Project\\new\\inventory_fe\\src\\pages\\Pharmacy.tsx",[],"D:\\Project\\new\\inventory_fe\\src\\api\\account.ts",[],"D:\\Project\\new\\inventory_fe\\src\\api\\pharmacy.ts",[],"D:\\Project\\new\\inventory_fe\\src\\api\\inventoryPharmacy.ts",[],"D:\\Project\\new\\inventory_fe\\src\\models\\pharmacy.ts",[],"D:\\Project\\new\\inventory_fe\\src\\component\\Account\\index.ts",[],"D:\\Project\\new\\inventory_fe\\src\\models\\index.ts",[],"D:\\Project\\new\\inventory_fe\\src\\component\\Pharmacys\\index.ts",[],"D:\\Project\\new\\inventory_fe\\src\\models\\account.ts",[],"D:\\Project\\new\\inventory_fe\\src\\models\\doctor.ts",[],"D:\\Project\\new\\inventory_fe\\src\\component\\Account\\Login.tsx",["184"],"import React from \"react\"\r\nimport { Form } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { emailRegExp } from \"../../utils\";\r\nimport { useAccount } from \"../../hooks/account\";\r\nimport { LoginInfoModel } from \"../../models\";\r\nimport { Button } from \"../shared\";\r\nimport { useAsync } from \"../../utils\";\r\n\r\nconst validationSchema = yup\r\n    .object()\r\n    .shape({\r\n        mEmail: yup\r\n            .string()\r\n            .required('Vui lòng nhập địa chỉ email hợp lệ.')\r\n            .matches(emailRegExp, 'Vui lòng nhập địa chỉ email hợp lệ.'),\r\n        mPassword: yup\r\n            .number()\r\n            .required('Vui lòng nhập mật khẩu đúng.')\r\n            .min(3, 'Mật khẩu phải tối thiểu 6 ký tự.')\r\n    });\r\n\r\nconst Login = React.memo(() => {\r\n    const history = useHistory()\r\n\r\n    const account = useAccount()\r\n    const loginAsync = useAsync<LoginInfoModel>(account.loginAsync)\r\n\r\n    return <body className=\"login bg-blue\">\r\n        <div id=\"main\">\r\n            <div className=\"logo-wrap d-flex justify-content-center\">\r\n                <Link\r\n                    className=\"logo\"\r\n                    to=\"/\"\r\n                >\r\n                    <img src=\"./images/logo.png\" title=\"Medigo\" className=\"img-fluid\" width={140} />\r\n                </Link>\r\n            </div>\r\n            <div className=\"form-wrap\">\r\n                <h1 className=\"text-center mb-5\">MEDIGO ADMIN</h1>\r\n                <Formik\r\n                    enableReinitialize={true}\r\n                    initialValues={{\r\n                        mEmail: '',\r\n                        mPassword: ''\r\n                    }}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={values => {\r\n                        loginAsync.execute(values).then(res => {\r\n                            history.push(\"/search-pharmacys\")\r\n                        })\r\n                    }}\r\n                >\r\n                    {({\r\n                        errors,\r\n                        isSubmitting,\r\n                        submitCount,\r\n                        values,\r\n                        handleChange,\r\n                        handleSubmit\r\n                    }) => <Form\r\n                        className=\"login-form\"\r\n                        noValidate={true}\r\n                        validated={submitCount > 0}\r\n                        onSubmit={handleSubmit}\r\n                    >\r\n                            <Form.Group>\r\n                                <Form.Control\r\n                                    name=\"mEmail\"\r\n                                    placeholder=\"Email\"\r\n                                    required={true}\r\n                                    type=\"email\"\r\n                                    value={values.mEmail}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {errors.mEmail}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Control\r\n                                    name=\"mPassword\"\r\n                                    placeholder=\"Mật khẩu\"\r\n                                    required={true}\r\n                                    type=\"password\"\r\n                                    value={values.mPassword}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {errors.mPassword}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <p className=\"text-right\">\r\n                            </p>\r\n                            <Button\r\n                                className=\"btn btn-block\"\r\n                                type=\"submit\"\r\n                            />\r\n                        </Form>\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    </body>\r\n})\r\n\r\nexport default Login","D:\\Project\\new\\inventory_fe\\src\\component\\Pharmacys\\FormProduct.tsx",["185","186","187"],"import React, { useEffect, useMemo } from \"react\"\r\nimport { Header } from \"../shared\"\r\nimport usePharmacy from \"../../hooks/pharmacy\"\r\nimport { useAsync, useQuery } from \"../../utils\"\r\nimport { PharmacyDetailModel, ProductModel } from \"../../models\"\r\nimport { searchProduct } from \"../../api\"\r\n\r\nconst FormProduct = React.memo(() => {\r\n\r\n    const query = useQuery()\r\n    const productId: string = query.get('productId') || ''\r\n\r\n    const { getCurrentDetailPharmacy } = usePharmacy()\r\n    const getCurrentDetailPharmacyAsync = useAsync<PharmacyDetailModel>(getCurrentDetailPharmacy)\r\n    const searchProductAsync = useAsync(searchProduct)\r\n\r\n    useEffect(() => {\r\n        getCurrentDetailPharmacyAsync.execute()\r\n        searchProductAsync.execute(getQuery(productId))\r\n    }, [])\r\n\r\n    const getQuery = (productId: string) => {\r\n        return {\r\n            query: {\r\n                match: {\r\n                    _id: productId\r\n                },\r\n            }\r\n        }\r\n    }\r\n\r\n    const product: ProductModel = useMemo(() => {\r\n        if (!searchProductAsync.value) return new ProductModel({})\r\n        return searchProductAsync.value.data[ 0 ]\r\n    }, [ searchProductAsync.value ])\r\n\r\n    return <div className='w-100'>\r\n        <Header\r\n            title=\"Cập nhật sản phẩm\"\r\n            subTitle={getCurrentDetailPharmacyAsync.value?.pharmacy?.mName}\r\n            backTo=\"/search-product\"\r\n        />\r\n\r\n        <div id=\"main\">\r\n            <div className=\"container\">\r\n                <div className=\"d-flex align-items-center product-summary\">\r\n                    <div className=\"product-thumb\">\r\n                        <img src={product.imageUrls[ 0 ]} className=\"img-fluid\" />\r\n                    </div>\r\n                    <strong>{product.name}</strong>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"spacing\" />\r\n                </div>\r\n                <div className=\"product-info\">\r\n                    <form>\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-7 col-sm-7 col-form-label\">Đơn vị</label>\r\n                            <div className=\"col-5 col-sm-5\">\r\n                                <select className=\"form-control\">\r\n                                    <option selected>Viên</option>\r\n                                    <option>Vỉ</option>\r\n                                    <option>Miếng</option>\r\n                                    <option>Hộp</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-7 col-sm-7 col-form-label\">Số lượng</label>\r\n                            <div className=\"col-5 col-sm-5\">\r\n                                <input type=\"number\" className=\"form-control\" min={0} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-7 col-sm-7 col-form-label\">Đơn giá (VND)</label>\r\n                            <div className=\"col-5 col-sm-5\">\r\n                                <input type=\"number\" className=\"form-control\" min={0} />\r\n                            </div>\r\n                        </div>\r\n                        <p><strong>Bán theo đơn vị khác</strong></p>\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-7 col-sm-7 col-form-label\">Đơn vị</label>\r\n                            <div className=\"col-5 col-sm-5\">\r\n                                <select className=\"form-control\">\r\n                                    <option selected>Viên</option>\r\n                                    <option>Vỉ</option>\r\n                                    <option>Miếng</option>\r\n                                    <option>Hộp</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-7 col-sm-7 col-form-label\">Đơn giá (VND)</label>\r\n                            <div className=\"col-5 col-sm-5\">\r\n                                <input type=\"number\" className=\"form-control\" min={0} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-7 col-sm-7 col-form-label\">Đơn vị</label>\r\n                            <div className=\"col-5 col-sm-5\">\r\n                                <select className=\"form-control\">\r\n                                    <option selected>Viên</option>\r\n                                    <option>Vỉ</option>\r\n                                    <option>Miếng</option>\r\n                                    <option>Hộp</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-7 col-sm-7 col-form-label\">Đơn giá (VND)</label>\r\n                            <div className=\"col-5 col-sm-5\">\r\n                                <input type=\"number\" className=\"form-control\" min={0} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"fixed-button d-flex justify-content-between\">\r\n                            <button type=\"button\" className=\"btn btn-white\" data-dismiss=\"modal\">Hủy</button>\r\n                            <a type=\"submit\" className=\"btn\" data-toggle=\"modal\" data-target=\"#confirmModal\">HOÀN THÀNH</a>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n})\r\n\r\nexport default FormProduct","D:\\Project\\new\\inventory_fe\\src\\component\\Pharmacys\\InventoryOfPharmacy.tsx",["188","189","190","191","192","193"],"import React, { useEffect } from \"react\"\r\nimport { useRecoilValue } from \"recoil\"\r\nimport { getInventoryInPharmacy } from \"../../api\"\r\nimport usePharmacy from \"../../hooks/pharmacy\"\r\nimport { PharmacyDetailModel } from \"../../models/pharmacy\"\r\nimport { accountDataState } from \"../../recoil/account\"\r\nimport { useAsync, useQuery } from \"../../utils/hooks\"\r\nimport { Header } from \"../shared\"\r\n\r\nconst InventoryOfPharmacy = React.memo(() => {\r\n    const query = useQuery()\r\n    const { getCurrentDetailPharmacy } = usePharmacy()\r\n    const getCurrentDetailPharmacyAsync = useAsync<PharmacyDetailModel>(getCurrentDetailPharmacy)\r\n    const getInventoryInPharmacyAsync = useAsync(getInventoryInPharmacy)\r\n\r\n    const accountInfo = useRecoilValue(accountDataState)\r\n\r\n    useEffect(() => {\r\n        getCurrentDetailPharmacyAsync.execute()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getInventoryInPharmacyAsync.execute({\r\n            pharmacyId: query.get('mId'),\r\n            adminId: accountInfo.doctor.mId,\r\n            filter: {\r\n                offset: 0,\r\n                limit: 10,\r\n                skip: 0,\r\n            }\r\n        })\r\n    }, [ accountInfo.doctor.mId ])\r\n\r\n    return <>\r\n        <Header\r\n            title={getCurrentDetailPharmacyAsync.value?.pharmacy.mName}\r\n            subTitle={getCurrentDetailPharmacyAsync.value?.pharmacyAddress.mAddress}\r\n            backTo=\"/search-pharmacys\"\r\n        />\r\n        <div id=\"main\">\r\n            <div className=\"container\">\r\n                <div className=\"form-search\">\r\n                    <p className=\"mb-2\">Nhập liệu</p>\r\n                    <form id=\"search\">\r\n                        <input type=\"text\" name=\"search\" placeholder=\"Tên theo tên thuốc\" className=\"input-search\" />\r\n                        <a href=\"javascript:void(0);\" id=\"btn-search-clear\">\r\n                            <img src=\"./images/cancel.svg\" title=\"Xóa\" className=\"img-fluid\" width={24} />\r\n                        </a>\r\n                        <button type=\"button\" className=\"btn-search\">\r\n                            <img src=\"./images/search.svg\" title=\"Tìm kiếm\" className=\"img-fluid\" width={24} />\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"spacing\" />\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    <p className=\"text-center\">NT đang có 4300 sản phẩm</p>\r\n                    <div className=\"d-flex justify-content-between mb-3\">\r\n                        <label className=\"mt-2\">Sắp xếp theo</label>\r\n                        <select className=\"sort-by\">\r\n                            <option>Ngày cập nhật</option>\r\n                            <option>Bán chạy</option>\r\n                            <option>Example</option>\r\n                            <option>Example 2</option>\r\n                            <option>Example 3</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"table-products\">\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Tên</th>\r\n                                        <th scope=\"col\" style={{ width: 70 }}>Đơn vị</th>\r\n                                        <th scope=\"col\" style={{ width: 90 }}>Số lượng</th>\r\n                                        <th scope=\"col\" style={{ width: 80 }}>ĐƠN GIÁ</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>Panadol Extra 180 viên</td>\r\n                                        <td>Viên</td>\r\n                                        <td>240</td>\r\n                                        <td className=\"price\">12.000</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Panadol Extra 180 viên</td>\r\n                                        <td>Miếng</td>\r\n                                        <td>240</td>\r\n                                        <td className=\"price\">12.000</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Panadol Extra 180 viên</td>\r\n                                        <td>Ống</td>\r\n                                        <td>240</td>\r\n                                        <td className=\"price\">12.000</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Panadol Extra 180 viên</td>\r\n                                        <td>Lọ</td>\r\n                                        <td>240</td>\r\n                                        <td className=\"price\">120.000</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Panadol Extra 180 viên</td>\r\n                                        <td>Lọ</td>\r\n                                        <td>240</td>\r\n                                        <td className=\"price\">120.000</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Panadol Extra 180 viên</td>\r\n                                        <td>Lọ</td>\r\n                                        <td>240</td>\r\n                                        <td className=\"price\">120.000</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Panadol Extra 180 viên</td>\r\n                                        <td>Lọ</td>\r\n                                        <td>240</td>\r\n                                        <td className=\"price\">120.000</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Panadol Extra 180 viên</td>\r\n                                        <td>Lọ</td>\r\n                                        <td>240</td>\r\n                                        <td className=\"price\">120.000</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n})\r\n\r\nexport default InventoryOfPharmacy","D:\\Project\\new\\inventory_fe\\src\\component\\Pharmacys\\SearchPharmacys.tsx",["194","195","196"],"import React, { useRef, useState } from \"react\"\r\nimport { Header } from \"../shared\"\r\nimport { getListPharmacy } from '../../api'\r\nimport { PharmacyModel } from \"../../models/pharmacy\"\r\nimport Loading from \"../shared/Loading\"\r\nimport { useHistory } from \"react-router\"\r\nimport { useRecoilValue } from \"recoil\"\r\nimport { accountDataState } from \"../../recoil/account\"\r\nimport { debounce, useAsync } from \"../../utils\"\r\nimport useClickOutside from \"../../utils/hooks/useClickOutSide\"\r\nimport usePharmacy from \"../../hooks/pharmacy\"\r\n\r\nconst SearchPharmacys = React.memo(() => {\r\n    const history = useHistory()\r\n    const searchRef: any = useRef()\r\n    const inputSearch: any = useRef()\r\n\r\n    const { setCurrentPharmacy } = usePharmacy()\r\n    const getListPharmacyAsync = useAsync<Array<PharmacyModel>>(getListPharmacy)\r\n\r\n    const accountInfo = useRecoilValue(accountDataState)\r\n    const [ state, setState ] = useState<{\r\n        offset: number,\r\n        limit: number,\r\n        listPharmacy: Array<PharmacyModel>,\r\n        show: boolean,\r\n    }>({\r\n        offset: 0,\r\n        limit: 10,\r\n        listPharmacy: [],\r\n        show: false,\r\n    })\r\n\r\n\r\n    useClickOutside(() => {\r\n        setState(prev => ({ ...prev, show: false }))\r\n    }, [ searchRef ])\r\n\r\n    const resetState = () => {\r\n        inputSearch.current.value = ''\r\n        setState({\r\n            offset: 0,\r\n            limit: 10,\r\n            listPharmacy: [],\r\n            show: false,\r\n        })\r\n    }\r\n\r\n    const handleSeach = debounce((value: string) => {\r\n        if (value === '') {\r\n            resetState()\r\n            return\r\n        }\r\n\r\n        const params = {\r\n            offset: state.offset,\r\n            limit: state.limit,\r\n            mName: value,\r\n            adminId: accountInfo.doctor.mId\r\n        }\r\n\r\n        getListPharmacyAsync.execute(params).then(res => {\r\n            setState(prev => ({\r\n                ...prev,\r\n                offset: 0,\r\n                listPharmacy: res,\r\n                show: true,\r\n            }))\r\n        })\r\n    }, 500)\r\n\r\n    const handleScroll = (e: any) => {\r\n        const bottom = e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight;\r\n        const params = {\r\n            offset: state.offset,\r\n            limit: state.limit,\r\n            mName: inputSearch.current.value,\r\n            adminId: accountInfo.doctor.mId\r\n        }\r\n\r\n        if (bottom) {\r\n            getListPharmacyAsync.execute(params).then(res => {\r\n                setState(prev => ({\r\n                    ...prev,\r\n                    offset: prev.offset + 10,\r\n                    listPharmacy: [ ...prev.listPharmacy, ...res ]\r\n                }))\r\n            })\r\n        }\r\n    };\r\n\r\n    return <div className='w-100'>\r\n        <Header\r\n            title=\"Tìm nhà thuốc\"\r\n            subTitle={`Admin ${ accountInfo.doctor.mDisplayName }`}\r\n            backTo=\"/\"\r\n        />\r\n        <div id=\"main\">\r\n            <div className=\"container\" ref={searchRef}>\r\n                <div className=\"form-search\">\r\n                    <form id=\"search\">\r\n                        <input\r\n                            ref={inputSearch}\r\n                            onClick={() => setState(prev => ({ ...prev, show: true }))}\r\n                            type=\"text\"\r\n                            name=\"search\"\r\n                            placeholder=\"Tìm kiếm theo tên nhà thuốc\"\r\n                            className=\"input-search\"\r\n                            onChange={(e => {\r\n                                e.preventDefault()\r\n                                const { value } = e?.target\r\n                                handleSeach(value)\r\n                            })}\r\n                        />\r\n                        <span id=\"btn-search-clear\" onClick={resetState}>\r\n                            <img src=\"./images/cancel.svg\" title=\"Xóa\" className=\"img-fluid\" width={24} />\r\n                        </span>\r\n                        <button type=\"button\" className=\"btn-search\">\r\n                            <img src=\"./images/search.svg\" title=\"Tìm kiếm\" className=\"img-fluid\" width={24} />\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n                {\r\n                    state.show && state.listPharmacy.length !== 0 &&\r\n                    <div className=\"search-results\">\r\n                        <ul onScroll={handleScroll} style={{ maxHeight: \"400px\", overflowY: \"auto\" }}>\r\n                            {\r\n                                state.listPharmacy.map((pharmacy: PharmacyModel) => {\r\n                                    return <li onClick={() => {\r\n                                        history.push(`/inventory-of-pharmacy`)\r\n                                        setCurrentPharmacy({\r\n                                            pharmacyCode: pharmacy.mPharCode,\r\n                                            pharmacyId: pharmacy.mId,\r\n                                        })\r\n                                    }}>\r\n                                        <a>\r\n                                            <strong>{pharmacy.mName}</strong><br />\r\n                                            <small className=\"txt-gray\">{pharmacy.mPharCode}</small>\r\n                                        </a>\r\n                                    </li>\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                }\r\n                {\r\n                    getListPharmacyAsync.status === 'loading' &&\r\n                    <div className='p-3 d-flex justify-content-center'>\r\n                        <Loading />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>\r\n})\r\n\r\nexport default SearchPharmacys","D:\\Project\\new\\inventory_fe\\src\\component\\Pharmacys\\SearchProduct.tsx",["197","198","199","200","201","202","203","204","205","206"],"import React, { useEffect, useRef, useState } from \"react\"\r\nimport { Header } from \"../shared\"\r\nimport { ISearchProduct, searchProduct } from '../../api'\r\nimport Loading from \"../shared/Loading\"\r\nimport { useHistory } from \"react-router\"\r\nimport { useRecoilValue } from \"recoil\"\r\nimport { debounce, useAsync } from \"../../utils\"\r\nimport useClickOutside from \"../../utils/hooks/useClickOutSide\"\r\nimport { PharmacyDetailModel, ProductModel } from \"../../models\"\r\nimport usePharmacy from \"../../hooks/pharmacy\"\r\n\r\nconst SearchProduct = React.memo(() => {\r\n    const history = useHistory()\r\n    const searchRef: any = useRef()\r\n    const inputSearch: any = useRef()\r\n\r\n    const { getCurrentDetailPharmacy } = usePharmacy()\r\n    const getCurrentDetailPharmacyAsync = useAsync<PharmacyDetailModel>(getCurrentDetailPharmacy)\r\n    const searchProductAsync = useAsync(searchProduct)\r\n\r\n    const [ state, setState ] = useState<{\r\n        from: number,\r\n        size: number,\r\n        listProduct: Array<ProductModel>,\r\n        show: boolean,\r\n        outOfData: boolean,\r\n        total?: number,\r\n    }>({\r\n        from: 0,\r\n        size: 10,\r\n        listProduct: [],\r\n        show: false,\r\n        outOfData: false,\r\n        total: 0,\r\n    })\r\n\r\n    useEffect(() => {\r\n        getCurrentDetailPharmacyAsync.execute()\r\n    }, [])\r\n\r\n    useClickOutside(() => {\r\n        setState(prev => ({ ...prev, show: false }))\r\n    }, [ searchRef ])\r\n\r\n    const getQuery = ({ search, from, size }: ISearchProduct) => {\r\n        return {\r\n            from,\r\n            size,\r\n            query: {\r\n                match: {\r\n                    name: search\r\n                },\r\n            }\r\n        }\r\n    }\r\n\r\n    const resetState = () => {\r\n        inputSearch.current.value = ''\r\n        setState({\r\n            from: 0,\r\n            size: 10,\r\n            listProduct: [],\r\n            outOfData: false,\r\n            show: false,\r\n            total: 0\r\n        })\r\n    }\r\n\r\n    const handleSeach = debounce((value: string) => {\r\n        if (value == '') {\r\n            resetState()\r\n            return\r\n        }\r\n\r\n        const params = {\r\n            from: state.from,\r\n            size: state.size,\r\n            search: value,\r\n        }\r\n\r\n        searchProductAsync.execute(getQuery(params)).then(res => {\r\n            setState(prev => ({\r\n                ...prev,\r\n                from: 0,\r\n                listProduct: res.data,\r\n                show: true,\r\n                total: res.total,\r\n                outOfData: res.data.length == 0\r\n            }))\r\n        })\r\n    }, 500)\r\n\r\n    const handleScroll = (e: any) => {\r\n        if (state.outOfData) return\r\n        const bottom = e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight\r\n        const params = {\r\n            from: state.from + 10,\r\n            size: state.size,\r\n            search: inputSearch.current.value,\r\n        }\r\n\r\n        if (bottom) {\r\n            searchProductAsync.execute(getQuery(params)).then(res => {\r\n                setState(prev => ({\r\n                    ...prev,\r\n                    from: prev.from + 10,\r\n                    listProduct: [ ...prev.listProduct, ...res.data ],\r\n                    total: res.total,\r\n                    outOfData: res.data.length == 0\r\n                }))\r\n            })\r\n        }\r\n    }\r\n\r\n    return <div className='w-100'>\r\n        <Header\r\n            title=\"Tìm kiếm sản phẩm\"\r\n            subTitle={getCurrentDetailPharmacyAsync.value?.pharmacy?.mName}\r\n            backTo=\"/\"\r\n        />\r\n        <div id=\"main\">\r\n            <div className=\"container\" ref={searchRef}>\r\n                <div className=\"form-search\">\r\n                    <form id=\"search\">\r\n                        <input\r\n                            ref={inputSearch}\r\n                            onClick={() => setState(prev => ({ ...prev, show: true }))}\r\n                            type=\"text\"\r\n                            name=\"search\"\r\n                            placeholder=\"Tên theo tên thuốc\"\r\n                            className=\"input-search\"\r\n                            onChange={(e => {\r\n                                e.preventDefault()\r\n                                const { value } = e?.target\r\n                                handleSeach(value)\r\n                            })}\r\n                        />\r\n                        <span id=\"btn-search-clear\" onClick={resetState}>\r\n                            <img src=\"./images/cancel.svg\" title=\"Xóa\" className=\"img-fluid\" width={24} />\r\n                        </span>\r\n                        <button type=\"button\" className=\"btn-search\">\r\n                            <img src=\"./images/search.svg\" title=\"Tìm kiếm\" className=\"img-fluid\" width={24} />\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n                {\r\n                    state.show && state.listProduct.length != 0 &&\r\n                    <div className=\"search-results\">\r\n                        <ul onScroll={handleScroll} style={{ maxHeight: \"400px\", overflowY: \"auto\" }}>\r\n                            {\r\n                                state.listProduct.map((product: ProductModel, index) => {\r\n                                    return <li onClick={() => history.push(`/update-product?productId=${ product._id }`)}>\r\n                                        <a>\r\n                                            <strong>{product.name}</strong><br />\r\n                                            <small className=\"txt-gray\"></small>\r\n                                        </a>\r\n                                    </li>\r\n                                })\r\n                            }\r\n                            {\r\n                                searchProductAsync.status == 'loading' &&\r\n                                <li className='p-3 d-flex justify-content-center'>\r\n                                    <Loading />\r\n                                </li>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>\r\n})\r\n\r\nexport default SearchProduct","D:\\Project\\new\\inventory_fe\\src\\hooks\\account.tsx",["207"],"import React from \"react\"\r\nimport { useSetRecoilState } from \"recoil\"\r\nimport { accountState } from \"../recoil\"\r\nimport { login, ILoginRequest, setAccountInfo } from '../api'\r\n\r\nexport const useAccount = () => {\r\n    const setAccountState = useSetRecoilState(accountState.accountDataState)\r\n\r\n    const loginAsync = async (payload: ILoginRequest) => {\r\n        return await login(payload).then(res => {\r\n            setAccountState(res)\r\n            setAccountInfo(res)\r\n            return res\r\n        })\r\n    }\r\n\r\n    return {\r\n        loginAsync\r\n    }\r\n}","D:\\Project\\new\\inventory_fe\\src\\component\\shared\\Loading.tsx",[],"D:\\Project\\new\\inventory_fe\\src\\utils\\hooks\\useClickOutSide.tsx",["208"],"import { useEffect } from \"react\"\r\n\r\nconst useClickOutside = (onClickOutside: Function, listRef: Array<any>) => {\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', clickOutside)\r\n        document.addEventListener('touchstart', clickOutside)\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', clickOutside)\r\n            document.removeEventListener('touchstart', clickOutside)\r\n        }\r\n    }, [ listRef ])\r\n\r\n    const clickOutside = (event: any) => {\r\n        const idOutSide = listRef.every(ref => !ref.current.contains(event.target))\r\n        if (idOutSide) {\r\n            onClickOutside(event)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default useClickOutside","D:\\Project\\new\\inventory_fe\\src\\component\\shared\\index.ts",[],"D:\\Project\\new\\inventory_fe\\src\\utils\\index.ts",[],"D:\\Project\\new\\inventory_fe\\src\\utils\\hooks\\index.ts",[],"D:\\Project\\new\\inventory_fe\\src\\utils\\regex.ts",[],"D:\\Project\\new\\inventory_fe\\src\\utils\\formaters.ts",[],"D:\\Project\\new\\inventory_fe\\src\\component\\shared\\Button.tsx",[],"D:\\Project\\new\\inventory_fe\\src\\component\\shared\\Header.tsx",["209"],"D:\\Project\\new\\inventory_fe\\src\\utils\\hooks\\useQuery.tsx",[],"D:\\Project\\new\\inventory_fe\\src\\utils\\hooks\\useAsync.tsx",[],"D:\\Project\\new\\inventory_fe\\src\\utils\\helpers.ts",["210"],"import { useLocation } from \"react-router\";\r\n\r\nexport const setBodyClassName = (\r\n    className: string\r\n) => {\r\n    document.body.className = className;\r\n};\r\n\r\nexport const debounce = (callback: Function, delay: number) => {\r\n    let timeoutHandler: any = null;\r\n    return (...args: any[]) => {\r\n        if (timeoutHandler) {\r\n            clearTimeout(timeoutHandler);\r\n        }\r\n        timeoutHandler = setTimeout(() => {\r\n            callback(...args);\r\n            timeoutHandler = null;\r\n        }, delay);\r\n    };\r\n};","D:\\Project\\new\\inventory_fe\\src\\api\\product.ts",[],"D:\\Project\\new\\inventory_fe\\src\\models\\product.ts",[],"D:\\Project\\new\\inventory_fe\\src\\hooks\\pharmacy.tsx",[],"D:\\Project\\new\\inventory_fe\\src\\recoil\\pharmacy.ts",[],"D:\\Project\\new\\inventory_fe\\src\\config\\index.ts",[],{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":2,"column":26,"nodeType":"217","messageId":"218","endLine":2,"endColumn":40},{"ruleId":"219","severity":1,"message":"220","line":17,"column":8,"nodeType":"221","endLine":17,"endColumn":10,"suggestions":"222"},{"ruleId":"223","severity":1,"message":"224","line":38,"column":21,"nodeType":"225","endLine":38,"endColumn":101},{"ruleId":"219","severity":1,"message":"226","line":20,"column":8,"nodeType":"221","endLine":20,"endColumn":10,"suggestions":"227"},{"ruleId":"223","severity":1,"message":"224","line":48,"column":25,"nodeType":"225","endLine":48,"endColumn":83},{"ruleId":"228","severity":1,"message":"229","line":117,"column":29,"nodeType":"225","endLine":117,"endColumn":110},{"ruleId":"219","severity":1,"message":"230","line":20,"column":8,"nodeType":"221","endLine":20,"endColumn":10,"suggestions":"231"},{"ruleId":"219","severity":1,"message":"232","line":32,"column":8,"nodeType":"221","endLine":32,"endColumn":34,"suggestions":"233"},{"ruleId":"228","severity":1,"message":"234","line":46,"column":25,"nodeType":"225","endLine":46,"endColumn":77},{"ruleId":"235","severity":1,"message":"236","line":46,"column":33,"nodeType":"237","messageId":"238","endLine":46,"endColumn":54},{"ruleId":"223","severity":1,"message":"224","line":47,"column":29,"nodeType":"225","endLine":47,"endColumn":107},{"ruleId":"223","severity":1,"message":"224","line":50,"column":29,"nodeType":"225","endLine":50,"endColumn":112},{"ruleId":"223","severity":1,"message":"224","line":116,"column":29,"nodeType":"225","endLine":116,"endColumn":107},{"ruleId":"223","severity":1,"message":"224","line":119,"column":29,"nodeType":"225","endLine":119,"endColumn":112},{"ruleId":"228","severity":1,"message":"229","line":136,"column":41,"nodeType":"225","endLine":136,"endColumn":44},{"ruleId":"215","severity":1,"message":"216","line":6,"column":10,"nodeType":"217","messageId":"218","endLine":6,"endColumn":24},{"ruleId":"219","severity":1,"message":"230","line":39,"column":8,"nodeType":"221","endLine":39,"endColumn":10,"suggestions":"239"},{"ruleId":"240","severity":1,"message":"241","line":70,"column":19,"nodeType":"242","messageId":"243","endLine":70,"endColumn":21},{"ruleId":"240","severity":1,"message":"241","line":88,"column":44,"nodeType":"242","messageId":"243","endLine":88,"endColumn":46},{"ruleId":"240","severity":1,"message":"241","line":109,"column":48,"nodeType":"242","messageId":"243","endLine":109,"endColumn":50},{"ruleId":"223","severity":1,"message":"224","line":139,"column":29,"nodeType":"225","endLine":139,"endColumn":107},{"ruleId":"223","severity":1,"message":"224","line":142,"column":29,"nodeType":"225","endLine":142,"endColumn":112},{"ruleId":"240","severity":1,"message":"244","line":147,"column":60,"nodeType":"242","messageId":"243","endLine":147,"endColumn":62},{"ruleId":"228","severity":1,"message":"229","line":153,"column":41,"nodeType":"225","endLine":153,"endColumn":44},{"ruleId":"240","severity":1,"message":"241","line":161,"column":59,"nodeType":"242","messageId":"243","endLine":161,"endColumn":61},{"ruleId":"215","severity":1,"message":"245","line":1,"column":8,"nodeType":"217","messageId":"218","endLine":1,"endColumn":13},{"ruleId":"219","severity":1,"message":"246","line":12,"column":8,"nodeType":"221","endLine":12,"endColumn":19,"suggestions":"247"},{"ruleId":"223","severity":1,"message":"224","line":23,"column":17,"nodeType":"225","endLine":23,"endColumn":60},{"ruleId":"215","severity":1,"message":"248","line":1,"column":10,"nodeType":"217","messageId":"218","endLine":1,"endColumn":21},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"@typescript-eslint/no-unused-vars","'useRecoilValue' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAccountDataState'. Either include it or remove the dependency array.","ArrayExpression",["251"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getCurrentDetailPharmacyAsync', 'productId', and 'searchProductAsync'. Either include them or remove the dependency array.",["252"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'getCurrentDetailPharmacyAsync'. Either include it or remove the dependency array.",["253"],"React Hook useEffect has missing dependencies: 'getInventoryInPharmacyAsync' and 'query'. Either include them or remove the dependency array.",["254"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL",["255"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'React' is defined but never used.","React Hook useEffect has a missing dependency: 'clickOutside'. Either include it or remove the dependency array.",["256"],"'useLocation' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"261","fix":"265"},{"desc":"266","fix":"267"},"Update the dependencies array to be: [setAccountDataState]",{"range":"268","text":"269"},"Update the dependencies array to be: [getCurrentDetailPharmacyAsync, productId, searchProductAsync]",{"range":"270","text":"271"},"Update the dependencies array to be: [getCurrentDetailPharmacyAsync]",{"range":"272","text":"273"},"Update the dependencies array to be: [accountInfo.doctor.mId, getInventoryInPharmacyAsync, query]",{"range":"274","text":"275"},{"range":"276","text":"273"},"Update the dependencies array to be: [clickOutside, listRef]",{"range":"277","text":"278"},[590,592],"[setAccountDataState]",[779,781],"[getCurrentDetailPharmacyAsync, productId, searchProductAsync]",[843,845],"[getCurrentDetailPharmacyAsync]",[1148,1174],"[accountInfo.doctor.mId, getInventoryInPharmacyAsync, query]",[1319,1321],[446,457],"[clickOutside, listRef]"]