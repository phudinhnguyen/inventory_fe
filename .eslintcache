[{"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/index.tsx":"1","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/reportWebVitals.ts":"2","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/App.tsx":"3","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/api/index.ts":"4","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/pages/index.ts":"5","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/recoil/index.ts":"6","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/api/account.ts":"7","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/api/pharmacy.ts":"8","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/api/base.ts":"9","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/recoil/account.ts":"10","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/pages/Account.tsx":"11","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/pages/Pharmacy.tsx":"12","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/models/pharmacy.ts":"13","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/models/index.ts":"14","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Account/index.ts":"15","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Pharmacys/index.ts":"16","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/models/account.ts":"17","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/models/doctor.ts":"18","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Account/Login.tsx":"19","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Pharmacys/SearchPharmacys.tsx":"20","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/hooks/account.tsx":"21","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/hooks/useClickOutSide.tsx":"22","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/shared/Loading.tsx":"23","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/hooks/index.ts":"24","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/shared/index.ts":"25","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/index.ts":"26","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/regex.ts":"27","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/shared/Button.tsx":"28","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/hooks/useAsync.tsx":"29","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/helpers.ts":"30","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/formaters.ts":"31","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/shared/Header.tsx":"32","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Pharmacys/InventoryOfPharmacy.tsx":"33"},{"size":616,"mtime":1616242616389,"results":"34","hashOfConfig":"35"},{"size":425,"mtime":1616242616391,"results":"36","hashOfConfig":"35"},{"size":712,"mtime":1616242616387,"results":"37","hashOfConfig":"35"},{"size":75,"mtime":1616242616387,"results":"38","hashOfConfig":"35"},{"size":98,"mtime":1616242616390,"results":"39","hashOfConfig":"35"},{"size":42,"mtime":1616242616391,"results":"40","hashOfConfig":"35"},{"size":1591,"mtime":1616242616387,"results":"41","hashOfConfig":"35"},{"size":2045,"mtime":1616242616387,"results":"42","hashOfConfig":"35"},{"size":397,"mtime":1616242616387,"results":"43","hashOfConfig":"35"},{"size":199,"mtime":1616242616391,"results":"44","hashOfConfig":"35"},{"size":365,"mtime":1616242616390,"results":"45","hashOfConfig":"35"},{"size":570,"mtime":1616258912894,"results":"46","hashOfConfig":"35"},{"size":1505,"mtime":1616242616390,"results":"47","hashOfConfig":"35"},{"size":52,"mtime":1616242616390,"results":"48","hashOfConfig":"35"},{"size":43,"mtime":1616242616388,"results":"49","hashOfConfig":"35"},{"size":63,"mtime":1616242616388,"results":"50","hashOfConfig":"35"},{"size":214,"mtime":1616242616390,"results":"51","hashOfConfig":"35"},{"size":872,"mtime":1616242616390,"results":"52","hashOfConfig":"35"},{"size":4246,"mtime":1616242616388,"results":"53","hashOfConfig":"35"},{"size":5073,"mtime":1616258899630,"results":"54","hashOfConfig":"35"},{"size":539,"mtime":1616242616389,"results":"55","hashOfConfig":"35"},{"size":685,"mtime":1616242616389,"results":"56","hashOfConfig":"35"},{"size":130,"mtime":1616242616389,"results":"57","hashOfConfig":"35"},{"size":52,"mtime":1616242616389,"results":"58","hashOfConfig":"35"},{"size":89,"mtime":1616242616389,"results":"59","hashOfConfig":"35"},{"size":81,"mtime":1616242616391,"results":"60","hashOfConfig":"35"},{"size":188,"mtime":1616242616391,"results":"61","hashOfConfig":"35"},{"size":402,"mtime":1616242616388,"results":"62","hashOfConfig":"35"},{"size":1459,"mtime":1616242616389,"results":"63","hashOfConfig":"35"},{"size":462,"mtime":1616242616391,"results":"64","hashOfConfig":"35"},{"size":282,"mtime":1616242616391,"results":"65","hashOfConfig":"35"},{"size":695,"mtime":1616242616388,"results":"66","hashOfConfig":"35"},{"size":5539,"mtime":1616258973685,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"z9m8sw",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/index.tsx",[],["142","143"],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/reportWebVitals.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/App.tsx",["144","145"],"import React, { useEffect } from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { getAccountInfo } from './api';\nimport { Account } from './pages';\nimport { Pharmacys } from './pages';\nimport { accountState } from './recoil';\n\nconst App: React.FC = React.memo(() => {\n    const [ accountDataState, setAccountDataState ] = useRecoilState(accountState.accountDataState)\n\n    useEffect(() => {\n        const accountInfo = getAccountInfo()\n\n        if (accountInfo?.loginSession?.mToken) {\n            setAccountDataState(accountInfo)\n        }\n    }, [])\n\n    if (accountDataState.loginSession?.mToken) {\n        return <Pharmacys />\n    }\n\n    return <Account />\n});\n\nexport default App;\n","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/api/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/pages/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/recoil/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/api/account.ts",["146"],"import { DoctorModel, LoginInfoModel } from '../models'\nimport client from './base'\nimport { decode } from \"jsonwebtoken\";\n\nexport type ILoginRequest = {\n    mEmail: string\n    mPassword: string\n}\n\nexport const login = async (payload: ILoginRequest): Promise<LoginInfoModel> => {\n    return await client.post('http://dev-api.medigo.xyz/admin/signin/basic', payload).then(res => {\n        const { loginSession, userInfo } = res?.data\n\n        return {\n            loginSession,\n            doctor: new DoctorModel(userInfo)\n        } as LoginInfoModel\n    })\n}\n\n// export const CONFIG = {\n//     TOKEN_FIELD: \"medigo_inventory_token\"\n// }\n\n// export const setToken = (token: string) => {\n//     if (typeof token == \"string\") {\n//         localStorage.setItem(CONFIG.TOKEN_FIELD, token);\n//     }\n// };\n\n// export const getToken = () => {\n//     const token = localStorage.getItem(CONFIG.TOKEN_FIELD);\n//     return token\n// };\n\n// export const removeToken = () => {\n//     localStorage.removeItem(CONFIG.TOKEN_FIELD);\n// };\n\n// export const getInfoFromToken = () => {\n//     const token = getToken();\n//     if (!token) return\n\n//     const info = decode(token)\n\n//     return info;\n// };\n\nexport const CONFIG = {\n    ACCOUNT_INFO_FIELD: \"MEDIGO_INVENTORY_ACCOUNT_INFO\"\n}\n\nexport const setAccountInfo = (accountInfo: LoginInfoModel) => {\n    localStorage.setItem(CONFIG.ACCOUNT_INFO_FIELD, JSON.stringify(accountInfo))\n}\n\nexport const getAccountInfo = () => {\n    const accountInfo: any = localStorage.getItem(CONFIG.ACCOUNT_INFO_FIELD)\n\n    return JSON.parse(accountInfo) as LoginInfoModel\n}","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/api/pharmacy.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/api/base.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/recoil/account.ts",["147"],"import {\n    atom,\n    selectorFamily\n} from 'recoil';\nimport { LoginInfoModel } from '../models'\n\nexport const accountDataState = atom({\n    key: \"accountState\",\n    default: {} as LoginInfoModel\n})","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/pages/Account.tsx",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/pages/Pharmacy.tsx",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/models/pharmacy.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/models/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Account/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Pharmacys/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/models/account.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/models/doctor.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Account/Login.tsx",["148"],"import React from \"react\"\nimport { Form } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { emailRegExp } from \"../../utils\";\nimport { useAccount } from \"../../hooks/account\";\nimport { useAsync } from \"../../hooks\";\nimport { LoginInfoModel } from \"../../models\";\nimport { Button } from \"../shared\";\n\nconst validationSchema = yup\n    .object()\n    .shape({\n        mEmail: yup\n            .string()\n            .required('Vui lòng nhập địa chỉ email hợp lệ.')\n            .matches(emailRegExp, 'Vui lòng nhập địa chỉ email hợp lệ.'),\n        mPassword: yup\n            .number()\n            .required('Vui lòng nhập mật khẩu đúng.')\n            .min(3, 'Mật khẩu phải tối thiểu 6 ký tự.')\n    });\n\nconst Login = React.memo(() => {\n    const history = useHistory()\n\n    const account = useAccount()\n    const loginAsync = useAsync<LoginInfoModel>(account.loginAsync)\n\n    return <body className=\"login bg-blue\">\n        <div id=\"main\">\n            <div className=\"logo-wrap d-flex justify-content-center\">\n                <Link\n                    className=\"logo\"\n                    to=\"/\"\n                >\n                    <img src=\"./images/logo.png\" title=\"Medigo\" className=\"img-fluid\" width={140} />\n                </Link>\n            </div>\n            <div className=\"form-wrap\">\n                <h1 className=\"text-center mb-5\">MEDIGO ADMIN</h1>\n                <Formik\n                    enableReinitialize={true}\n                    initialValues={{\n                        mEmail: '',\n                        mPassword: ''\n                    }}\n                    validationSchema={validationSchema}\n                    onSubmit={values => {\n                        loginAsync.execute(values).then(res => {\n                            history.push(\"/search-pharmacys\")\n                        })\n                    }}\n                >\n                    {({\n                        errors,\n                        isSubmitting,\n                        submitCount,\n                        values,\n                        handleChange,\n                        handleSubmit\n                    }) => <Form\n                        className=\"login-form\"\n                        noValidate={true}\n                        validated={submitCount > 0}\n                        onSubmit={handleSubmit}\n                    >\n                            <Form.Group>\n                                <Form.Control\n                                    name=\"mEmail\"\n                                    placeholder=\"Email\"\n                                    required={true}\n                                    type=\"email\"\n                                    value={values.mEmail}\n                                    onChange={handleChange}\n                                />\n                                <Form.Control.Feedback type=\"invalid\">\n                                    {errors.mEmail}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Control\n                                    name=\"mPassword\"\n                                    placeholder=\"Mật khẩu\"\n                                    required={true}\n                                    type=\"password\"\n                                    value={values.mPassword}\n                                    onChange={handleChange}\n                                />\n                                <Form.Control.Feedback type=\"invalid\">\n                                    {errors.mPassword}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                            <p className=\"text-right\">\n                            </p>\n                            <Button\n                                className=\"btn btn-block\"\n                                type=\"submit\"\n                            />\n                        </Form>\n                    }\n                </Formik>\n            </div>\n        </div>\n    </body>\n})\n\nexport default Login","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Pharmacys/SearchPharmacys.tsx",["149","150","151","152","153","154"],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/hooks/account.tsx",["155"],"import React from \"react\"\nimport { useSetRecoilState } from \"recoil\"\nimport { accountState } from \"../recoil\"\nimport { login, ILoginRequest, setAccountInfo } from '../api'\n\nexport const useAccount = () => {\n    const setAccountState = useSetRecoilState(accountState.accountDataState)\n\n    const loginAsync = async (payload: ILoginRequest) => {\n        return await login(payload).then(res => {\n            setAccountState(res)\n            setAccountInfo(res)\n            return res\n        })\n    }\n\n    return {\n        loginAsync\n    }\n}","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/hooks/useClickOutSide.tsx",["156"],"import { useEffect } from \"react\"\n\nconst useClickOutside = (listRef: Array<any>, onClickOutside: Function) => {\n    useEffect(() => {\n        document.addEventListener('mousedown', clickOutside)\n        document.addEventListener('touchstart', clickOutside)\n\n        return () => {\n            document.removeEventListener('mousedown', clickOutside)\n            document.removeEventListener('touchstart', clickOutside)\n        }\n    }, [ listRef ])\n\n    const clickOutside = (event: any) => {\n        const idOutSide = listRef.every(ref => !ref.current.contains(event.target))\n        if (idOutSide) {\n            onClickOutside(event)\n        }\n    }\n\n}\n\nexport default useClickOutside","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/shared/Loading.tsx",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/hooks/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/shared/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/regex.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/shared/Button.tsx",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/hooks/useAsync.tsx",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/helpers.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/formaters.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/shared/Header.tsx",["157"],"import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\ninterface IProps {\n    title: string\n    subTitle: string\n    backTo: string\n}\n\nconst Header = React.memo((props: IProps) => {\n    const { title, subTitle, backTo = '/' } = props\n\n    return <header>\n        <nav className=\"navbar navbar-expand-xl\">\n            <span className=\"navbar-brand page-title\">\n                {title}<br />\n                <small>{subTitle}</small>\n            </span>\n            <Link\n                className=\"btn-back\"\n                to={backTo}\n            >\n                <img src=\"./images/back.svg\" width=\"{9}\" />\n            </Link>\n        </nav>\n    </header>\n})\n\nexport default Header","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Pharmacys/InventoryOfPharmacy.tsx",["158","159","160","161"],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":2,"column":26,"nodeType":"168","messageId":"169","endLine":2,"endColumn":40},{"ruleId":"170","severity":1,"message":"171","line":17,"column":8,"nodeType":"172","endLine":17,"endColumn":10,"suggestions":"173"},{"ruleId":"166","severity":1,"message":"174","line":3,"column":10,"nodeType":"168","messageId":"169","endLine":3,"endColumn":16},{"ruleId":"166","severity":1,"message":"175","line":3,"column":5,"nodeType":"168","messageId":"169","endLine":3,"endColumn":19},{"ruleId":"176","severity":1,"message":"177","line":38,"column":21,"nodeType":"178","endLine":38,"endColumn":101},{"ruleId":"179","severity":1,"message":"180","line":42,"column":19,"nodeType":"181","messageId":"182","endLine":42,"endColumn":21},{"ruleId":"176","severity":1,"message":"177","line":110,"column":29,"nodeType":"178","endLine":110,"endColumn":107},{"ruleId":"176","severity":1,"message":"177","line":113,"column":29,"nodeType":"178","endLine":113,"endColumn":112},{"ruleId":"179","severity":1,"message":"180","line":119,"column":49,"nodeType":"181","messageId":"182","endLine":119,"endColumn":51},{"ruleId":"179","severity":1,"message":"183","line":125,"column":61,"nodeType":"181","messageId":"182","endLine":125,"endColumn":63},{"ruleId":"184","severity":1,"message":"185","line":131,"column":41,"nodeType":"178","endLine":131,"endColumn":44},{"ruleId":"166","severity":1,"message":"186","line":1,"column":8,"nodeType":"168","messageId":"169","endLine":1,"endColumn":13},{"ruleId":"170","severity":1,"message":"187","line":12,"column":8,"nodeType":"172","endLine":12,"endColumn":19,"suggestions":"188"},{"ruleId":"176","severity":1,"message":"177","line":23,"column":17,"nodeType":"178","endLine":23,"endColumn":60},{"ruleId":"184","severity":1,"message":"189","line":18,"column":25,"nodeType":"178","endLine":18,"endColumn":77},{"ruleId":"190","severity":1,"message":"191","line":18,"column":33,"nodeType":"192","messageId":"193","endLine":18,"endColumn":54},{"ruleId":"176","severity":1,"message":"177","line":19,"column":29,"nodeType":"178","endLine":19,"endColumn":107},{"ruleId":"176","severity":1,"message":"177","line":22,"column":29,"nodeType":"178","endLine":22,"endColumn":112},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"@typescript-eslint/no-unused-vars","'useRecoilValue' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAccountDataState'. Either include it or remove the dependency array.","ArrayExpression",["196"],"'decode' is defined but never used.","'selectorFamily' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'React' is defined but never used.","React Hook useEffect has a missing dependency: 'clickOutside'. Either include it or remove the dependency array.",["197"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},"Update the dependencies array to be: [setAccountDataState]",{"range":"202","text":"203"},"Update the dependencies array to be: [clickOutside, listRef]",{"range":"204","text":"205"},[574,576],"[setAccountDataState]",[435,446],"[clickOutside, listRef]"]