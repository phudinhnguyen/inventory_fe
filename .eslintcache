[{"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/index.tsx":"1","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/reportWebVitals.ts":"2","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/App.tsx":"3","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/pages/index.ts":"4","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/pages/Account.tsx":"5","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Account/index.ts":"6","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Account/Login.tsx":"7","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/pages/Pharmacy.tsx":"8","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Pharmacys/index.ts":"9","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Pharmacys/SearchPharmacys.tsx":"10","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/shared/index.ts":"11","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/shared/Header.tsx":"12","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/recoil/index.ts":"13","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/recoil/account.ts":"14","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/index.ts":"15","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/helpers.ts":"16","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/formaters.ts":"17","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/regex.ts":"18","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/hooks/account.tsx":"19","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/models/index.ts":"20","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/models/account.ts":"21","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/models/doctor.ts":"22"},{"size":616,"mtime":1616079250043,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1616079250044,"results":"25","hashOfConfig":"24"},{"size":443,"mtime":1616165894885,"results":"26","hashOfConfig":"24"},{"size":98,"mtime":1616161754923,"results":"27","hashOfConfig":"24"},{"size":365,"mtime":1616162943512,"results":"28","hashOfConfig":"24"},{"size":43,"mtime":1616080088302,"results":"29","hashOfConfig":"24"},{"size":4326,"mtime":1616165831909,"results":"30","hashOfConfig":"24"},{"size":413,"mtime":1616161757396,"results":"31","hashOfConfig":"24"},{"size":63,"mtime":1616161555945,"results":"32","hashOfConfig":"24"},{"size":2264,"mtime":1616161554621,"results":"33","hashOfConfig":"24"},{"size":44,"mtime":1616161349699,"results":"34","hashOfConfig":"24"},{"size":496,"mtime":1616161232128,"results":"35","hashOfConfig":"24"},{"size":42,"mtime":1616164008620,"results":"36","hashOfConfig":"24"},{"size":199,"mtime":1616163962516,"results":"37","hashOfConfig":"24"},{"size":81,"mtime":1616079250045,"results":"38","hashOfConfig":"24"},{"size":107,"mtime":1616079250044,"results":"39","hashOfConfig":"24"},{"size":282,"mtime":1616079250044,"results":"40","hashOfConfig":"24"},{"size":188,"mtime":1616079250045,"results":"41","hashOfConfig":"24"},{"size":514,"mtime":1616164439576,"results":"42","hashOfConfig":"24"},{"size":52,"mtime":1616162273138,"results":"43","hashOfConfig":"24"},{"size":113,"mtime":1616164181997,"results":"44","hashOfConfig":"24"},{"size":344,"mtime":1616162281851,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"z9m8sw",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/index.tsx",[],["96","97"],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/reportWebVitals.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/App.tsx",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/pages/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/pages/Account.tsx",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Account/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Account/Login.tsx",["98"],"import React from \"react\"\nimport { Form } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { emailRegExp } from \"../../utils\";\nimport { useAccount } from \"../../hooks/account\";\n\nconst validationSchema = yup\n    .object()\n    .shape({\n        email: yup\n            .string()\n            .required('Vui lòng nhập địa chỉ email hợp lệ.')\n            .matches(emailRegExp, 'Vui lòng nhập địa chỉ email hợp lệ.'),\n        password: yup\n            .string()\n            .required('Vui lòng nhập mật khẩu đúng.')\n            .min(6, 'Mật khẩu phải tối thiểu 6 ký tự.')\n    });\n\nconst Login = React.memo(() => {\n    const { login } = useAccount()\n    const history = useHistory()\n\n    return <body className=\"login bg-blue\">\n        <div id=\"main\">\n            <div className=\"logo-wrap d-flex justify-content-center\">\n                <Link\n                    className=\"logo\"\n                    to=\"/\"\n                >\n                    <img src=\"./images/logo.png\" title=\"Medigo\" className=\"img-fluid\" width={140} />\n                </Link>\n            </div>\n            <div className=\"form-wrap\">\n                <h1 className=\"text-center mb-5\">MEDIGO ADMIN</h1>\n                <Formik\n                    enableReinitialize={true}\n                    initialValues={{\n                        email: '',\n                        password: ''\n                    }}\n                    validationSchema={validationSchema}\n                    onSubmit={async values => {\n                        console.log(values)\n                        login(values).then(res => {\n                            console.log('res: ', res);\n                            history.push(\"/search-pharmacys\")\n                        })\n                    }}\n                >\n                    {({\n                        errors,\n                        isSubmitting,\n                        submitCount,\n                        values,\n                        handleChange,\n                        handleSubmit\n                    }) =>\n                        <Form\n                            className=\"login-form\"\n                            noValidate={true}\n                            validated={submitCount > 0}\n                            onSubmit={handleSubmit}\n                        >\n                            <Form.Group>\n                                <Form.Control\n                                    name=\"email\"\n                                    placeholder=\"Email\"\n                                    required={true}\n                                    type=\"email\"\n                                    value={values.email}\n                                    onChange={handleChange}\n                                />\n                                <Form.Control.Feedback type=\"invalid\">\n                                    {errors.email}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Control\n                                    name=\"password\"\n                                    placeholder=\"Mật khẩu\"\n                                    required={true}\n                                    type=\"password\"\n                                    value={values.password}\n                                    onChange={handleChange}\n                                />\n                                <Form.Control.Feedback type=\"invalid\">\n                                    {errors.password}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                            <p className=\"text-right\">\n                            </p>\n                            <button\n                                className=\"btn btn-block\"\n                                disabled={isSubmitting}\n                                type=\"submit\"\n                            >\n                                <>Đăng nhập</>\n                            </button>\n                        </Form>\n                    }\n                </Formik>\n            </div>\n        </div>\n    </body>\n})\n\nexport default Login","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/pages/Pharmacy.tsx",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Pharmacys/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Pharmacys/SearchPharmacys.tsx",["99","100","101","102"],"import React from \"react\"\nimport { Header } from \"../shared\"\n\nconst SearchPharmacys = React.memo(() => {\n    return <div>\n        <Header />\n        <div id=\"main\">\n            <div className=\"container\">\n                <div className=\"form-search\">\n                    <form id=\"search\">\n                        <input type=\"text\" name=\"search\" placeholder=\"Tên theo tên thuốc\" className=\"input-search\" defaultValue=\"Panadol\" />\n                        <a href=\"javascript:void(0);\" id=\"btn-search-clear\">\n                            <img src=\"./images/cancel.svg\" title=\"Xóa\" className=\"img-fluid\" width={24} />\n                        </a>\n                        <button type=\"button\" className=\"btn-search\">\n                            <img src=\"./images/search.svg\" title=\"Tìm kiếm\" className=\"img-fluid\" width={24} />\n                        </button>\n                    </form>\n                </div>\n                <div className=\"search-results\">\n                    <ul>\n                        <li>\n                            <a href=\"product.html\">\n                                <strong>Panadol Extra vỉ 10 viên</strong><br />\n                            </a>\n                        </li>\n                        <li>\n                            <a href=\"product.html\">\n                                <strong>Panadol Extra hộp 60 viên</strong><br />\n                            </a>\n                        </li>\n                        <li>\n                            <a href=\"product.html\">\n                                <strong>Panadol Extra hộp 120 viên</strong><br />\n                            </a>\n                        </li>\n                        <li>\n                            <a href=\"product.html\">\n                                <strong>Panadol Extra hộp 180 viên</strong><br />\n                            </a>\n                        </li>\n                        <li>\n                            <a href=\"product.html\">\n                                <strong>Panadol Extra hộp 240 viên</strong><br />\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n\n})\n\nexport default SearchPharmacys","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/shared/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/shared/Header.tsx",["103"],"import React from \"react\"\n\nconst Header = React.memo(() => {\n    return <header>\n        <nav className=\"navbar navbar-expand-xl\">\n            <span className=\"navbar-brand page-title\">\n                NT Bình An<br />\n                <small>2 Lê Duẫn, P.1, Q.1, Đà Nẵng</small>\n            </span>\n            <a href=\"homepage.html\" className=\"btn-back\">\n                <img src=\"./images/back.svg\" width=\"{9}\" />\n            </a>\n        </nav>\n    </header>\n})\n\nexport default Header","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/recoil/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/recoil/account.ts",["104"],"import {\n    atom,\n    selectorFamily\n} from 'recoil';\nimport { LoginInfoModel } from '../models'\n\nexport const accountDataState = atom({\n    key: \"accountState\",\n    default: {} as LoginInfoModel\n})","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/helpers.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/formaters.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/regex.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/hooks/account.tsx",["105"],"import React from \"react\"\nimport { useSetRecoilState } from \"recoil\"\nimport { accountState } from \"../recoil\"\nimport { DoctorModel } from \"../models\"\n\nexport const useAccount = () => {\n    const setAccountState = useSetRecoilState(accountState.accountDataState)\n\n    const login = async (payload: { email: string, password: string }) => {\n        // call api\n        setAccountState({ doctor: new DoctorModel(), token: \"testToken\" })\n        return Promise.resolve(\"data\")\n    }\n\n    return {\n        login\n    }\n}","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/models/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/models/account.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/models/doctor.ts",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":33,"column":21,"nodeType":"112","endLine":33,"endColumn":101},{"ruleId":"113","severity":1,"message":"114","line":12,"column":25,"nodeType":"112","endLine":12,"endColumn":77},{"ruleId":"115","severity":1,"message":"116","line":12,"column":33,"nodeType":"117","messageId":"118","endLine":12,"endColumn":54},{"ruleId":"110","severity":1,"message":"111","line":13,"column":29,"nodeType":"112","endLine":13,"endColumn":107},{"ruleId":"110","severity":1,"message":"111","line":16,"column":29,"nodeType":"112","endLine":16,"endColumn":112},{"ruleId":"110","severity":1,"message":"111","line":11,"column":17,"nodeType":"112","endLine":11,"endColumn":60},{"ruleId":"119","severity":1,"message":"120","line":3,"column":5,"nodeType":"121","messageId":"122","endLine":3,"endColumn":19},{"ruleId":"119","severity":1,"message":"123","line":1,"column":8,"nodeType":"121","messageId":"122","endLine":1,"endColumn":13},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","@typescript-eslint/no-unused-vars","'selectorFamily' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]