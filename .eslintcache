[{"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/index.tsx":"1","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/reportWebVitals.ts":"2","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/App.tsx":"3","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/api/index.ts":"4","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/recoil/index.ts":"5","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/pages/index.ts":"6","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/api/pharmacy.ts":"7","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/api/base.ts":"8","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/api/account.ts":"9","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/api/inventoryPharmacy.ts":"10","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/api/product.ts":"11","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/recoil/account.ts":"12","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/pages/Account.tsx":"13","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/pages/Pharmacy.tsx":"14","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/models/pharmacy.ts":"15","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/models/product.ts":"16","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/models/index.ts":"17","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/config/index.ts":"18","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Account/index.ts":"19","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Pharmacys/index.ts":"20","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/models/account.ts":"21","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/models/doctor.ts":"22","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Account/Login.tsx":"23","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Pharmacys/SearchPharmacys.tsx":"24","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Pharmacys/FormProduct.tsx":"25","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Pharmacys/InventoryOfPharmacy.tsx":"26","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Pharmacys/SearchProduct.tsx":"27","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/hooks/account.tsx":"28","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/shared/Loading.tsx":"29","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/hooks/pharmacy.tsx":"30","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/hooks/useClickOutSide.tsx":"31","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/index.ts":"32","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/shared/index.ts":"33","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/hooks/index.ts":"34","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/regex.ts":"35","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/shared/Button.tsx":"36","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/hooks/useQuery.tsx":"37","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/helpers.ts":"38","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/hooks/useAsync.tsx":"39","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/shared/Header.tsx":"40","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/formaters.ts":"41"},{"size":616,"mtime":1616242616389,"results":"42","hashOfConfig":"43"},{"size":425,"mtime":1616242616391,"results":"44","hashOfConfig":"43"},{"size":709,"mtime":1616592696144,"results":"45","hashOfConfig":"43"},{"size":137,"mtime":1616417290061,"results":"46","hashOfConfig":"43"},{"size":42,"mtime":1616242616391,"results":"47","hashOfConfig":"43"},{"size":98,"mtime":1616242616390,"results":"48","hashOfConfig":"43"},{"size":862,"mtime":1616338625797,"results":"49","hashOfConfig":"43"},{"size":394,"mtime":1616415861030,"results":"50","hashOfConfig":"43"},{"size":876,"mtime":1616592696145,"results":"51","hashOfConfig":"43"},{"size":2013,"mtime":1616597233761,"results":"52","hashOfConfig":"43"},{"size":894,"mtime":1616592696146,"results":"53","hashOfConfig":"43"},{"size":180,"mtime":1616592696155,"results":"54","hashOfConfig":"43"},{"size":432,"mtime":1616592696154,"results":"55","hashOfConfig":"43"},{"size":742,"mtime":1616592696155,"results":"56","hashOfConfig":"43"},{"size":4940,"mtime":1616296123651,"results":"57","hashOfConfig":"43"},{"size":2808,"mtime":1616597454017,"results":"58","hashOfConfig":"43"},{"size":107,"mtime":1616417349120,"results":"59","hashOfConfig":"43"},{"size":124,"mtime":1616592696153,"results":"60","hashOfConfig":"43"},{"size":43,"mtime":1616242616388,"results":"61","hashOfConfig":"43"},{"size":251,"mtime":1616340806187,"results":"62","hashOfConfig":"43"},{"size":214,"mtime":1616242616390,"results":"63","hashOfConfig":"43"},{"size":872,"mtime":1616242616390,"results":"64","hashOfConfig":"43"},{"size":4246,"mtime":1616294117362,"results":"65","hashOfConfig":"43"},{"size":5667,"mtime":1616683828618,"results":"66","hashOfConfig":"43"},{"size":6635,"mtime":1616595508473,"results":"67","hashOfConfig":"43"},{"size":7300,"mtime":1616686022070,"results":"68","hashOfConfig":"43"},{"size":5984,"mtime":1616602162127,"results":"69","hashOfConfig":"43"},{"size":539,"mtime":1616242616389,"results":"70","hashOfConfig":"43"},{"size":130,"mtime":1616242616389,"results":"71","hashOfConfig":"43"},{"size":742,"mtime":1616596537821,"results":"72","hashOfConfig":"43"},{"size":685,"mtime":1616414903961,"results":"73","hashOfConfig":"43"},{"size":106,"mtime":1616294113336,"results":"74","hashOfConfig":"43"},{"size":89,"mtime":1616242616389,"results":"75","hashOfConfig":"43"},{"size":87,"mtime":1616294014407,"results":"76","hashOfConfig":"43"},{"size":188,"mtime":1616242616391,"results":"77","hashOfConfig":"43"},{"size":402,"mtime":1616242616388,"results":"78","hashOfConfig":"43"},{"size":132,"mtime":1616294015881,"results":"79","hashOfConfig":"43"},{"size":507,"mtime":1616293303886,"results":"80","hashOfConfig":"43"},{"size":1459,"mtime":1616293942081,"results":"81","hashOfConfig":"43"},{"size":695,"mtime":1616242616388,"results":"82","hashOfConfig":"43"},{"size":282,"mtime":1616242616391,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"z9m8sw",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"86"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/index.tsx",[],["177","178"],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/reportWebVitals.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/App.tsx",["179","180"],"import React, { useEffect } from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { getAccountInfo } from './api';\nimport { Account } from './pages';\nimport { Pharmacys } from './pages';\nimport { accountState } from './recoil';\n\nconst App: React.FC = React.memo(() => {\n    const [ accountDataState, setAccountDataState ] = useRecoilState(accountState.accountDataState)\n\n    useEffect(() => {\n        const accountInfo = getAccountInfo()\n\n        if (accountInfo?.loginSession?.mToken) {\n            setAccountDataState(accountInfo)\n        }\n    }, [])\n\n    if (accountDataState.loginSession?.mToken) {\n        return <Pharmacys />\n    }\n    return <Account />\n});\n\nexport default App","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/api/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/recoil/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/pages/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/api/pharmacy.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/api/base.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/api/account.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/api/inventoryPharmacy.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/api/product.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/recoil/account.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/pages/Account.tsx",["181","182","183"],"import React, { useEffect } from \"react\"\nimport { Redirect, Route, Switch, useHistory } from \"react-router\"\nimport { getAccountInfo } from \"../api\"\nimport { Login } from \"../component/Account\"\n\nconst Account: React.FC = React.memo(() => {\n    return <Switch>\n        <Route exact={true} path=\"/\" component={() => <Redirect to=\"/login\" />} />\n        <Route path=\"/login\" component={Login} />\n    </Switch>\n})\n\nexport default Account","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/pages/Pharmacy.tsx",["184","185","186"],"import React, { useEffect } from \"react\"\nimport { Redirect, Route, Switch, useHistory } from \"react-router\"\nimport { getAccountInfo } from \"../api\"\nimport { FormProduct, InventoryOfPharmacy, SearchPharmacys, SearchProduct } from \"../component/Pharmacys\"\n\nconst Pharmacys: React.FC = React.memo(() => {\n\n    return <Switch>\n        <Route exact={true} path=\"/\" component={() => <Redirect to=\"/search-pharmacys\" />} />\n        <Route path=\"/search-pharmacys\" component={SearchPharmacys} />\n        <Route path=\"/inventory-of-pharmacy\" component={InventoryOfPharmacy} />\n        <Route path=\"/search-product\" component={SearchProduct} />\n        <Route path=\"/update-product\" component={FormProduct} />\n    </Switch>\n})\n\nexport default Pharmacys","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/models/pharmacy.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/models/product.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/models/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/config/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Account/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Pharmacys/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/models/account.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/models/doctor.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Account/Login.tsx",["187"],"import React from \"react\"\nimport { Form } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { emailRegExp } from \"../../utils\";\nimport { useAccount } from \"../../hooks/account\";\nimport { LoginInfoModel } from \"../../models\";\nimport { Button } from \"../shared\";\nimport { useAsync } from \"../../utils\";\n\nconst validationSchema = yup\n    .object()\n    .shape({\n        mEmail: yup\n            .string()\n            .required('Vui lòng nhập địa chỉ email hợp lệ.')\n            .matches(emailRegExp, 'Vui lòng nhập địa chỉ email hợp lệ.'),\n        mPassword: yup\n            .number()\n            .required('Vui lòng nhập mật khẩu đúng.')\n            .min(3, 'Mật khẩu phải tối thiểu 6 ký tự.')\n    });\n\nconst Login = React.memo(() => {\n    const history = useHistory()\n\n    const account = useAccount()\n    const loginAsync = useAsync<LoginInfoModel>(account.loginAsync)\n\n    return <body className=\"login bg-blue\">\n        <div id=\"main\">\n            <div className=\"logo-wrap d-flex justify-content-center\">\n                <Link\n                    className=\"logo\"\n                    to=\"/\"\n                >\n                    <img src=\"./images/logo.png\" title=\"Medigo\" className=\"img-fluid\" width={140} />\n                </Link>\n            </div>\n            <div className=\"form-wrap\">\n                <h1 className=\"text-center mb-5\">MEDIGO ADMIN</h1>\n                <Formik\n                    enableReinitialize={true}\n                    initialValues={{\n                        mEmail: '',\n                        mPassword: ''\n                    }}\n                    validationSchema={validationSchema}\n                    onSubmit={values => {\n                        loginAsync.execute(values).then(res => {\n                            history.push(\"/search-pharmacys\")\n                        })\n                    }}\n                >\n                    {({\n                        errors,\n                        isSubmitting,\n                        submitCount,\n                        values,\n                        handleChange,\n                        handleSubmit\n                    }) => <Form\n                        className=\"login-form\"\n                        noValidate={true}\n                        validated={submitCount > 0}\n                        onSubmit={handleSubmit}\n                    >\n                            <Form.Group>\n                                <Form.Control\n                                    name=\"mEmail\"\n                                    placeholder=\"Email\"\n                                    required={true}\n                                    type=\"email\"\n                                    value={values.mEmail}\n                                    onChange={handleChange}\n                                />\n                                <Form.Control.Feedback type=\"invalid\">\n                                    {errors.mEmail}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Control\n                                    name=\"mPassword\"\n                                    placeholder=\"Mật khẩu\"\n                                    required={true}\n                                    type=\"password\"\n                                    value={values.mPassword}\n                                    onChange={handleChange}\n                                />\n                                <Form.Control.Feedback type=\"invalid\">\n                                    {errors.mPassword}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                            <p className=\"text-right\">\n                            </p>\n                            <Button\n                                className=\"btn btn-block\"\n                                type=\"submit\"\n                            />\n                        </Form>\n                    }\n                </Formik>\n            </div>\n        </div>\n    </body>\n})\n\nexport default Login","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Pharmacys/SearchPharmacys.tsx",["188","189","190"],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Pharmacys/FormProduct.tsx",["191","192","193","194"],"import React, { useEffect, useMemo } from \"react\"\nimport { Header } from \"../shared\"\nimport usePharmacy from \"../../hooks/pharmacy\"\nimport { useAsync, useQuery } from \"../../utils\"\nimport { PharmacyDetailModel, ProductModel } from \"../../models\"\nimport { getInventoryInPharmacy, searchProduct } from \"../../api\"\nimport { useRecoilValue } from \"recoil\"\nimport { accountDataState } from \"../../recoil/account\"\n\nconst FormProduct = React.memo(() => {\n\n    const query = useQuery()\n    const productId: string = query.get('productId') || ''\n\n    const { getCurrentDetailPharmacy } = usePharmacy()\n    const getCurrentDetailPharmacyAsync = useAsync<PharmacyDetailModel>(getCurrentDetailPharmacy)\n    const getInventoryInPharmacyAsync = useAsync(getInventoryInPharmacy)\n    const searchProductAsync = useAsync(searchProduct)\n\n    const accountInfo = useRecoilValue(accountDataState)\n\n    useEffect(() => {\n        getCurrentDetailPharmacyAsync.execute()\n        searchProductAsync.execute(getQuery(productId))\n    }, [])\n\n    useEffect(() => {\n        const pharmacyId = getCurrentDetailPharmacyAsync.value?.pharmacy?.mId\n        const adminId = accountInfo?.loginSession?.mUserId\n\n        if (!pharmacyId || !adminId) return\n        getInventoryInPharmacyAsync.execute({\n            adminId,\n            pharmacyId,\n            filter: {\n                where: {\n                    mProductId: productId,\n                }\n            }\n        })\n    }, [accountInfo, getCurrentDetailPharmacyAsync.value])\n\n    const getQuery = (productId: string) => {\n        return {\n            query: {\n                match: {\n                    _id: productId\n                },\n            }\n        }\n    }\n\n    const product: ProductModel = useMemo(() => {\n        if (!searchProductAsync.value) return new ProductModel({})\n        return searchProductAsync.value.data[0]\n    }, [searchProductAsync.value])\n\n    return <div className='w-100'>\n        <Header\n            title=\"Cập nhật sản phẩm\"\n            subTitle={getCurrentDetailPharmacyAsync.value?.pharmacy?.mName}\n            backTo=\"/search-product\"\n        />\n\n        <div id=\"main\">\n            <div className=\"container\">\n                <div className=\"d-flex align-items-center product-summary\">\n                    <div className=\"product-thumb\">\n                        <img src={product.imageUrls[0]} className=\"img-fluid\" />\n                    </div>\n                    <strong>{product.name}</strong>\n                </div>\n                <div className=\"row\">\n                    <div className=\"spacing\" />\n                </div>\n                <div className=\"product-info\">\n                    <form>\n                        <div className=\"form-group row\">\n                            <label className=\"col-7 col-sm-7 col-form-label\">Đơn vị</label>\n                            <div className=\"col-5 col-sm-5\">\n                                <select className=\"form-control\">\n                                    <option selected>Viên</option>\n                                    <option>Vỉ</option>\n                                    <option>Miếng</option>\n                                    <option>Hộp</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label className=\"col-7 col-sm-7 col-form-label\">Số lượng</label>\n                            <div className=\"col-5 col-sm-5\">\n                                <input type=\"number\" className=\"form-control\" min={0} />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label className=\"col-7 col-sm-7 col-form-label\">Đơn giá (VND)</label>\n                            <div className=\"col-5 col-sm-5\">\n                                <input type=\"number\" className=\"form-control\" min={0} />\n                            </div>\n                        </div>\n                        <p><strong>Bán theo đơn vị khác</strong></p>\n                        <div className=\"form-group row\">\n                            <label className=\"col-7 col-sm-7 col-form-label\">Đơn vị</label>\n                            <div className=\"col-5 col-sm-5\">\n                                <select className=\"form-control\">\n                                    <option selected>Viên</option>\n                                    <option>Vỉ</option>\n                                    <option>Miếng</option>\n                                    <option>Hộp</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label className=\"col-7 col-sm-7 col-form-label\">Đơn giá (VND)</label>\n                            <div className=\"col-5 col-sm-5\">\n                                <input type=\"number\" className=\"form-control\" min={0} />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label className=\"col-7 col-sm-7 col-form-label\">Đơn vị</label>\n                            <div className=\"col-5 col-sm-5\">\n                                <select className=\"form-control\">\n                                    <option selected>Viên</option>\n                                    <option>Vỉ</option>\n                                    <option>Miếng</option>\n                                    <option>Hộp</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label className=\"col-7 col-sm-7 col-form-label\">Đơn giá (VND)</label>\n                            <div className=\"col-5 col-sm-5\">\n                                <input type=\"number\" className=\"form-control\" min={0} />\n                            </div>\n                        </div>\n                        <div className=\"fixed-button d-flex justify-content-between\">\n                            <button type=\"button\" className=\"btn btn-white\" data-dismiss=\"modal\">Hủy</button>\n                            <a type=\"submit\" className=\"btn\" data-toggle=\"modal\" data-target=\"#confirmModal\">HOÀN THÀNH</a>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n\n})\n\nexport default FormProduct","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Pharmacys/InventoryOfPharmacy.tsx",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/Pharmacys/SearchProduct.tsx",["195","196","197","198","199","200","201","202","203"],"import React, { useEffect, useRef, useState } from \"react\"\nimport { Header } from \"../shared\"\nimport { ISearchProduct, searchProduct } from '../../api'\nimport Loading from \"../shared/Loading\"\nimport { useHistory } from \"react-router\"\nimport { debounce, useAsync } from \"../../utils\"\nimport useClickOutside from \"../../utils/hooks/useClickOutSide\"\nimport { PharmacyDetailModel, ProductModel } from \"../../models\"\nimport usePharmacy from \"../../hooks/pharmacy\"\n\nconst SearchProduct = React.memo(() => {\n    const history = useHistory()\n    const searchRef: any = useRef()\n    const inputSearch: any = useRef()\n\n    const { getCurrentDetailPharmacy } = usePharmacy()\n    const getCurrentDetailPharmacyAsync = useAsync<PharmacyDetailModel>(getCurrentDetailPharmacy)\n    const searchProductAsync = useAsync(searchProduct)\n\n    const [state, setState] = useState<{\n        from: number,\n        size: number,\n        listProduct: Array<ProductModel>,\n        show: boolean,\n        outOfData: boolean,\n        total?: number,\n    }>({\n        from: 0,\n        size: 10,\n        listProduct: [],\n        show: false,\n        outOfData: false,\n        total: 0,\n    })\n\n    useEffect(() => {\n        getCurrentDetailPharmacyAsync.execute()\n    }, [])\n\n    useClickOutside(() => {\n        setState(prev => ({ ...prev, show: false }))\n    }, [searchRef])\n\n    const getQuery = ({ search, from, size }: ISearchProduct) => {\n        return {\n            from,\n            size,\n            query: {\n                match: {\n                    name: search\n                },\n            }\n        }\n    }\n\n    const resetState = () => {\n        inputSearch.current.value = ''\n        setState({\n            from: 0,\n            size: 10,\n            listProduct: [],\n            outOfData: false,\n            show: false,\n            total: 0\n        })\n    }\n\n    const handleSeach = debounce((value: string) => {\n        if (value == '') {\n            resetState()\n            return\n        }\n\n        const params = {\n            from: state.from,\n            size: state.size,\n            search: value,\n        }\n\n        searchProductAsync.execute(getQuery(params)).then(res => {\n            setState(prev => ({\n                ...prev,\n                from: 0,\n                listProduct: res.data,\n                show: true,\n                total: res.total,\n                outOfData: res.data.length == 0\n            }))\n        })\n    }, 500)\n\n    const handleScroll = (e: any) => {\n        if (state.outOfData) return\n        const bottom = e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight\n        const params = {\n            from: state.from + 10,\n            size: state.size,\n            search: inputSearch.current.value,\n        }\n\n        if (bottom) {\n            searchProductAsync.execute(getQuery(params)).then(res => {\n                setState(prev => ({\n                    ...prev,\n                    from: prev.from + 10,\n                    listProduct: [...prev.listProduct, ...res.data],\n                    total: res.total,\n                    outOfData: res.data.length == 0\n                }))\n            })\n        }\n    }\n\n    return <div className='w-100'>\n        <Header\n            title=\"Tìm kiếm sản phẩm\"\n            subTitle={getCurrentDetailPharmacyAsync.value?.pharmacy?.mName}\n            backTo=\"/inventory-of-pharmacy\"\n        />\n        <div id=\"main\">\n            <div className=\"container\" ref={searchRef}>\n                <div className=\"form-search\">\n                    <form id=\"search\">\n                        <input\n                            ref={inputSearch}\n                            onClick={() => setState(prev => ({ ...prev, show: true }))}\n                            type=\"text\"\n                            name=\"search\"\n                            placeholder=\"Tìm kiếm theo tên thuốc\"\n                            className=\"input-search\"\n                            onChange={(e => {\n                                e.preventDefault()\n                                const { value } = e?.target\n                                handleSeach(value)\n                            })}\n                        />\n                        <span id=\"btn-search-clear\" onClick={resetState}>\n                            <img src=\"./images/cancel.svg\" title=\"Xóa\" className=\"img-fluid\" width={24} />\n                        </span>\n                        <button type=\"button\" className=\"btn-search\">\n                            <img src=\"./images/search.svg\" title=\"Tìm kiếm\" className=\"img-fluid\" width={24} />\n                        </button>\n                    </form>\n                </div>\n                {\n                    state.show && state.listProduct.length != 0 &&\n                    <div className=\"search-results\">\n                        <ul onScroll={handleScroll} style={{ maxHeight: \"400px\", overflowY: \"auto\" }}>\n                            {\n                                state.listProduct.map((product: ProductModel, index) => {\n                                    return <li onClick={() => history.push(`/update-product?productId=${product._id}`)}>\n                                        <a>\n                                            <strong>{product.name}</strong><br />\n                                            <small className=\"txt-gray\"></small>\n                                        </a>\n                                    </li>\n                                })\n                            }\n                            {\n                                searchProductAsync.status == 'loading' &&\n                                <li className='p-3 d-flex justify-content-center'>\n                                    <Loading />\n                                </li>\n                            }\n                        </ul>\n                    </div>\n                }\n            </div>\n        </div>\n    </div>\n})\n\nexport default SearchProduct","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/hooks/account.tsx",["204"],"import React from \"react\"\nimport { useSetRecoilState } from \"recoil\"\nimport { accountState } from \"../recoil\"\nimport { login, ILoginRequest, setAccountInfo } from '../api'\n\nexport const useAccount = () => {\n    const setAccountState = useSetRecoilState(accountState.accountDataState)\n\n    const loginAsync = async (payload: ILoginRequest) => {\n        return await login(payload).then(res => {\n            setAccountState(res)\n            setAccountInfo(res)\n            return res\n        })\n    }\n\n    return {\n        loginAsync\n    }\n}","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/shared/Loading.tsx",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/hooks/pharmacy.tsx",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/hooks/useClickOutSide.tsx",["205"],"import { useEffect } from \"react\"\n\nconst useClickOutside = (onClickOutside: Function, listRef: Array<any>) => {\n    useEffect(() => {\n        document.addEventListener('mousedown', clickOutside)\n        document.addEventListener('touchstart', clickOutside)\n\n        return () => {\n            document.removeEventListener('mousedown', clickOutside)\n            document.removeEventListener('touchstart', clickOutside)\n        }\n    }, [ listRef ])\n\n    const clickOutside = (event: any) => {\n        const idOutSide = listRef.every(ref => !ref.current.contains(event.target))\n        if (idOutSide) {\n            onClickOutside(event)\n        }\n    }\n\n}\n\nexport default useClickOutside","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/shared/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/hooks/index.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/regex.ts",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/shared/Button.tsx",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/hooks/useQuery.tsx",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/helpers.ts",["206"],"import { useLocation } from \"react-router\";\n\nexport const setBodyClassName = (\n    className: string\n) => {\n    document.body.className = className;\n};\n\nexport const debounce = (callback: Function, delay: number) => {\n    let timeoutHandler: any = null;\n    return (...args: any[]) => {\n        if (timeoutHandler) {\n            clearTimeout(timeoutHandler);\n        }\n        timeoutHandler = setTimeout(() => {\n            callback(...args);\n            timeoutHandler = null;\n        }, delay);\n    };\n};","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/hooks/useAsync.tsx",[],"/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/component/shared/Header.tsx",["207"],"import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\ninterface IProps {\n    title: string\n    subTitle: string\n    backTo: string\n}\n\nconst Header = React.memo((props: IProps) => {\n    const { title, subTitle, backTo = '/' } = props\n\n    return <header>\n        <nav className=\"navbar navbar-expand-xl\">\n            <span className=\"navbar-brand page-title\">\n                {title}<br />\n                <small>{subTitle}</small>\n            </span>\n            <Link\n                className=\"btn-back\"\n                to={backTo}\n            >\n                <img src=\"./images/back.svg\" width=\"{9}\" />\n            </Link>\n        </nav>\n    </header>\n})\n\nexport default Header","/Users/nguyendinhphuc/Documents/Medigo/inventory_fe/src/utils/formaters.ts",[],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":2,"column":26,"nodeType":"214","messageId":"215","endLine":2,"endColumn":40},{"ruleId":"216","severity":1,"message":"217","line":17,"column":8,"nodeType":"218","endLine":17,"endColumn":10,"suggestions":"219"},{"ruleId":"212","severity":1,"message":"220","line":1,"column":17,"nodeType":"214","messageId":"215","endLine":1,"endColumn":26},{"ruleId":"212","severity":1,"message":"221","line":2,"column":35,"nodeType":"214","messageId":"215","endLine":2,"endColumn":45},{"ruleId":"212","severity":1,"message":"222","line":3,"column":10,"nodeType":"214","messageId":"215","endLine":3,"endColumn":24},{"ruleId":"212","severity":1,"message":"220","line":1,"column":17,"nodeType":"214","messageId":"215","endLine":1,"endColumn":26},{"ruleId":"212","severity":1,"message":"221","line":2,"column":35,"nodeType":"214","messageId":"215","endLine":2,"endColumn":45},{"ruleId":"212","severity":1,"message":"222","line":3,"column":10,"nodeType":"214","messageId":"215","endLine":3,"endColumn":24},{"ruleId":"223","severity":1,"message":"224","line":38,"column":21,"nodeType":"225","endLine":38,"endColumn":101},{"ruleId":"223","severity":1,"message":"224","line":116,"column":29,"nodeType":"225","endLine":116,"endColumn":107},{"ruleId":"223","severity":1,"message":"224","line":119,"column":29,"nodeType":"225","endLine":119,"endColumn":112},{"ruleId":"226","severity":1,"message":"227","line":136,"column":41,"nodeType":"225","endLine":136,"endColumn":44},{"ruleId":"216","severity":1,"message":"228","line":25,"column":8,"nodeType":"218","endLine":25,"endColumn":10,"suggestions":"229"},{"ruleId":"216","severity":1,"message":"230","line":41,"column":8,"nodeType":"218","endLine":41,"endColumn":58,"suggestions":"231"},{"ruleId":"223","severity":1,"message":"224","line":69,"column":25,"nodeType":"225","endLine":69,"endColumn":81},{"ruleId":"226","severity":1,"message":"227","line":138,"column":29,"nodeType":"225","endLine":138,"endColumn":110},{"ruleId":"216","severity":1,"message":"232","line":38,"column":8,"nodeType":"218","endLine":38,"endColumn":10,"suggestions":"233"},{"ruleId":"234","severity":1,"message":"235","line":69,"column":19,"nodeType":"236","messageId":"237","endLine":69,"endColumn":21},{"ruleId":"234","severity":1,"message":"235","line":87,"column":44,"nodeType":"236","messageId":"237","endLine":87,"endColumn":46},{"ruleId":"234","severity":1,"message":"235","line":108,"column":48,"nodeType":"236","messageId":"237","endLine":108,"endColumn":50},{"ruleId":"223","severity":1,"message":"224","line":138,"column":29,"nodeType":"225","endLine":138,"endColumn":107},{"ruleId":"223","severity":1,"message":"224","line":141,"column":29,"nodeType":"225","endLine":141,"endColumn":112},{"ruleId":"234","severity":1,"message":"238","line":146,"column":60,"nodeType":"236","messageId":"237","endLine":146,"endColumn":62},{"ruleId":"226","severity":1,"message":"227","line":152,"column":41,"nodeType":"225","endLine":152,"endColumn":44},{"ruleId":"234","severity":1,"message":"235","line":160,"column":59,"nodeType":"236","messageId":"237","endLine":160,"endColumn":61},{"ruleId":"212","severity":1,"message":"239","line":1,"column":8,"nodeType":"214","messageId":"215","endLine":1,"endColumn":13},{"ruleId":"216","severity":1,"message":"240","line":12,"column":8,"nodeType":"218","endLine":12,"endColumn":19,"suggestions":"241"},{"ruleId":"212","severity":1,"message":"242","line":1,"column":10,"nodeType":"214","messageId":"215","endLine":1,"endColumn":21},{"ruleId":"223","severity":1,"message":"224","line":23,"column":17,"nodeType":"225","endLine":23,"endColumn":60},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],"@typescript-eslint/no-unused-vars","'useRecoilValue' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAccountDataState'. Either include it or remove the dependency array.","ArrayExpression",["245"],"'useEffect' is defined but never used.","'useHistory' is defined but never used.","'getAccountInfo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'getCurrentDetailPharmacyAsync', 'productId', and 'searchProductAsync'. Either include them or remove the dependency array.",["246"],"React Hook useEffect has missing dependencies: 'getInventoryInPharmacyAsync' and 'productId'. Either include them or remove the dependency array.",["247"],"React Hook useEffect has a missing dependency: 'getCurrentDetailPharmacyAsync'. Either include it or remove the dependency array.",["248"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'React' is defined but never used.","React Hook useEffect has a missing dependency: 'clickOutside'. Either include it or remove the dependency array.",["249"],"'useLocation' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},"Update the dependencies array to be: [setAccountDataState]",{"range":"260","text":"261"},"Update the dependencies array to be: [getCurrentDetailPharmacyAsync, productId, searchProductAsync]",{"range":"262","text":"263"},"Update the dependencies array to be: [accountInfo, getCurrentDetailPharmacyAsync.value, getInventoryInPharmacyAsync, productId]",{"range":"264","text":"265"},"Update the dependencies array to be: [getCurrentDetailPharmacyAsync]",{"range":"266","text":"267"},"Update the dependencies array to be: [clickOutside, listRef]",{"range":"268","text":"269"},[574,576],"[setAccountDataState]",[1011,1013],"[getCurrentDetailPharmacyAsync, productId, searchProductAsync]",[1451,1501],"[accountInfo, getCurrentDetailPharmacyAsync.value, getInventoryInPharmacyAsync, productId]",[1239,1241],"[getCurrentDetailPharmacyAsync]",[435,446],"[clickOutside, listRef]"]