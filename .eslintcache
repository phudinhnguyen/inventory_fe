[{"D:\\Project\\new\\inventory_fe\\src\\index.tsx":"1","D:\\Project\\new\\inventory_fe\\src\\reportWebVitals.ts":"2","D:\\Project\\new\\inventory_fe\\src\\App.tsx":"3","D:\\Project\\new\\inventory_fe\\src\\pages\\index.ts":"4","D:\\Project\\new\\inventory_fe\\src\\recoil\\index.ts":"5","D:\\Project\\new\\inventory_fe\\src\\recoil\\account.ts":"6","D:\\Project\\new\\inventory_fe\\src\\pages\\Account.tsx":"7","D:\\Project\\new\\inventory_fe\\src\\pages\\Pharmacy.tsx":"8","D:\\Project\\new\\inventory_fe\\src\\component\\Account\\index.ts":"9","D:\\Project\\new\\inventory_fe\\src\\component\\Pharmacys\\index.ts":"10","D:\\Project\\new\\inventory_fe\\src\\component\\Pharmacys\\SearchPharmacys.tsx":"11","D:\\Project\\new\\inventory_fe\\src\\component\\Account\\Login.tsx":"12","D:\\Project\\new\\inventory_fe\\src\\hooks\\account.tsx":"13","D:\\Project\\new\\inventory_fe\\src\\component\\shared\\index.ts":"14","D:\\Project\\new\\inventory_fe\\src\\utils\\index.ts":"15","D:\\Project\\new\\inventory_fe\\src\\utils\\regex.ts":"16","D:\\Project\\new\\inventory_fe\\src\\utils\\helpers.ts":"17","D:\\Project\\new\\inventory_fe\\src\\utils\\formaters.ts":"18","D:\\Project\\new\\inventory_fe\\src\\component\\shared\\Header.tsx":"19","D:\\Project\\new\\inventory_fe\\src\\models\\index.ts":"20","D:\\Project\\new\\inventory_fe\\src\\models\\account.ts":"21","D:\\Project\\new\\inventory_fe\\src\\models\\doctor.ts":"22","D:\\Project\\new\\inventory_fe\\src\\api\\index.ts":"23","D:\\Project\\new\\inventory_fe\\src\\api\\account.ts":"24","D:\\Project\\new\\inventory_fe\\src\\api\\base.ts":"25","D:\\Project\\new\\inventory_fe\\src\\hooks\\index.ts":"26","D:\\Project\\new\\inventory_fe\\src\\hooks\\useAsync.tsx":"27","D:\\Project\\new\\inventory_fe\\src\\component\\shared\\Button.tsx":"28","D:\\Project\\new\\inventory_fe\\src\\api\\pharmacy.ts":"29","D:\\Project\\new\\inventory_fe\\src\\models\\pharmacy.ts":"30","D:\\Project\\new\\inventory_fe\\src\\component\\shared\\Loading.tsx":"31","D:\\Project\\new\\inventory_fe\\src\\hooks\\useClickOutSide.tsx":"32"},{"size":636,"mtime":1616210733924,"results":"33","hashOfConfig":"34"},{"size":440,"mtime":1616210733935,"results":"35","hashOfConfig":"34"},{"size":738,"mtime":1616230944247,"results":"36","hashOfConfig":"34"},{"size":99,"mtime":1616210733932,"results":"37","hashOfConfig":"34"},{"size":42,"mtime":1616210733935,"results":"38","hashOfConfig":"34"},{"size":208,"mtime":1616210733933,"results":"39","hashOfConfig":"34"},{"size":376,"mtime":1616210733927,"results":"40","hashOfConfig":"34"},{"size":424,"mtime":1616210733931,"results":"41","hashOfConfig":"34"},{"size":43,"mtime":1616210733915,"results":"42","hashOfConfig":"34"},{"size":63,"mtime":1616210733916,"results":"43","hashOfConfig":"34"},{"size":5124,"mtime":1616238153091,"results":"44","hashOfConfig":"34"},{"size":4354,"mtime":1616227765062,"results":"45","hashOfConfig":"34"},{"size":558,"mtime":1616228217363,"results":"46","hashOfConfig":"34"},{"size":90,"mtime":1616225491780,"results":"47","hashOfConfig":"34"},{"size":84,"mtime":1616210733938,"results":"48","hashOfConfig":"34"},{"size":189,"mtime":1616210733938,"results":"49","hashOfConfig":"34"},{"size":479,"mtime":1616227289872,"results":"50","hashOfConfig":"34"},{"size":291,"mtime":1616210733937,"results":"51","hashOfConfig":"34"},{"size":723,"mtime":1616228774069,"results":"52","hashOfConfig":"34"},{"size":53,"mtime":1616210733926,"results":"53","hashOfConfig":"34"},{"size":224,"mtime":1616213240578,"results":"54","hashOfConfig":"34"},{"size":900,"mtime":1616224796380,"results":"55","hashOfConfig":"34"},{"size":77,"mtime":1616232130148,"results":"56","hashOfConfig":"34"},{"size":1651,"mtime":1616228194273,"results":"57","hashOfConfig":"34"},{"size":413,"mtime":1616233299484,"results":"58","hashOfConfig":"34"},{"size":53,"mtime":1616210733919,"results":"59","hashOfConfig":"34"},{"size":1518,"mtime":1616213016254,"results":"60","hashOfConfig":"34"},{"size":418,"mtime":1616225524310,"results":"61","hashOfConfig":"34"},{"size":2119,"mtime":1616233297027,"results":"62","hashOfConfig":"34"},{"size":1547,"mtime":1616231735443,"results":"63","hashOfConfig":"34"},{"size":136,"mtime":1616234484783,"results":"64","hashOfConfig":"34"},{"size":707,"mtime":1616236041728,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"8j4m4n",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Project\\new\\inventory_fe\\src\\index.tsx",[],["137","138"],"D:\\Project\\new\\inventory_fe\\src\\reportWebVitals.ts",[],"D:\\Project\\new\\inventory_fe\\src\\App.tsx",["139","140"],"import React, { useEffect } from 'react';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport { getAccountInfo } from './api';\r\nimport { Account } from './pages';\r\nimport { Pharmacys } from './pages';\r\nimport { accountState } from './recoil';\r\n\r\nconst App: React.FC = React.memo(() => {\r\n    const [ accountDataState, setAccountDataState ] = useRecoilState(accountState.accountDataState)\r\n\r\n    useEffect(() => {\r\n        const accountInfo = getAccountInfo()\r\n\r\n        if (accountInfo?.loginSession?.mToken) {\r\n            setAccountDataState(accountInfo)\r\n        }\r\n    }, [])\r\n\r\n    if (accountDataState.loginSession?.mToken) {\r\n        return <Pharmacys />\r\n    }\r\n\r\n    return <Account />\r\n});\r\n\r\nexport default App;\r\n","D:\\Project\\new\\inventory_fe\\src\\pages\\index.ts",[],"D:\\Project\\new\\inventory_fe\\src\\recoil\\index.ts",[],"D:\\Project\\new\\inventory_fe\\src\\recoil\\account.ts",["141"],"import {\r\n    atom,\r\n    selectorFamily\r\n} from 'recoil';\r\nimport { LoginInfoModel } from '../models'\r\n\r\nexport const accountDataState = atom({\r\n    key: \"accountState\",\r\n    default: {} as LoginInfoModel\r\n})","D:\\Project\\new\\inventory_fe\\src\\pages\\Account.tsx",[],"D:\\Project\\new\\inventory_fe\\src\\pages\\Pharmacy.tsx",[],"D:\\Project\\new\\inventory_fe\\src\\component\\Account\\index.ts",[],"D:\\Project\\new\\inventory_fe\\src\\component\\Pharmacys\\index.ts",[],"D:\\Project\\new\\inventory_fe\\src\\component\\Pharmacys\\SearchPharmacys.tsx",["142","143","144","145","146","147"],"D:\\Project\\new\\inventory_fe\\src\\component\\Account\\Login.tsx",["148"],"import React from \"react\"\r\nimport { Form } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { emailRegExp } from \"../../utils\";\r\nimport { useAccount } from \"../../hooks/account\";\r\nimport { useAsync } from \"../../hooks\";\r\nimport { LoginInfoModel } from \"../../models\";\r\nimport { Button } from \"../shared\";\r\n\r\nconst validationSchema = yup\r\n    .object()\r\n    .shape({\r\n        mEmail: yup\r\n            .string()\r\n            .required('Vui lòng nhập địa chỉ email hợp lệ.')\r\n            .matches(emailRegExp, 'Vui lòng nhập địa chỉ email hợp lệ.'),\r\n        mPassword: yup\r\n            .number()\r\n            .required('Vui lòng nhập mật khẩu đúng.')\r\n            .min(3, 'Mật khẩu phải tối thiểu 6 ký tự.')\r\n    });\r\n\r\nconst Login = React.memo(() => {\r\n    const history = useHistory()\r\n\r\n    const account = useAccount()\r\n    const loginAsync = useAsync<LoginInfoModel>(account.loginAsync)\r\n\r\n    return <body className=\"login bg-blue\">\r\n        <div id=\"main\">\r\n            <div className=\"logo-wrap d-flex justify-content-center\">\r\n                <Link\r\n                    className=\"logo\"\r\n                    to=\"/\"\r\n                >\r\n                    <img src=\"./images/logo.png\" title=\"Medigo\" className=\"img-fluid\" width={140} />\r\n                </Link>\r\n            </div>\r\n            <div className=\"form-wrap\">\r\n                <h1 className=\"text-center mb-5\">MEDIGO ADMIN</h1>\r\n                <Formik\r\n                    enableReinitialize={true}\r\n                    initialValues={{\r\n                        mEmail: '',\r\n                        mPassword: ''\r\n                    }}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={values => {\r\n                        loginAsync.execute(values).then(res => {\r\n                            history.push(\"/search-pharmacys\")\r\n                        })\r\n                    }}\r\n                >\r\n                    {({\r\n                        errors,\r\n                        isSubmitting,\r\n                        submitCount,\r\n                        values,\r\n                        handleChange,\r\n                        handleSubmit\r\n                    }) => <Form\r\n                        className=\"login-form\"\r\n                        noValidate={true}\r\n                        validated={submitCount > 0}\r\n                        onSubmit={handleSubmit}\r\n                    >\r\n                            <Form.Group>\r\n                                <Form.Control\r\n                                    name=\"mEmail\"\r\n                                    placeholder=\"Email\"\r\n                                    required={true}\r\n                                    type=\"email\"\r\n                                    value={values.mEmail}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {errors.mEmail}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Control\r\n                                    name=\"mPassword\"\r\n                                    placeholder=\"Mật khẩu\"\r\n                                    required={true}\r\n                                    type=\"password\"\r\n                                    value={values.mPassword}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {errors.mPassword}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <p className=\"text-right\">\r\n                            </p>\r\n                            <Button\r\n                                className=\"btn btn-block\"\r\n                                type=\"submit\"\r\n                            />\r\n                        </Form>\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    </body>\r\n})\r\n\r\nexport default Login","D:\\Project\\new\\inventory_fe\\src\\hooks\\account.tsx",["149"],"import React from \"react\"\r\nimport { useSetRecoilState } from \"recoil\"\r\nimport { accountState } from \"../recoil\"\r\nimport { login, ILoginRequest, setAccountInfo } from '../api'\r\n\r\nexport const useAccount = () => {\r\n    const setAccountState = useSetRecoilState(accountState.accountDataState)\r\n\r\n    const loginAsync = async (payload: ILoginRequest) => {\r\n        return await login(payload).then(res => {\r\n            setAccountState(res)\r\n            setAccountInfo(res)\r\n            return res\r\n        })\r\n    }\r\n\r\n    return {\r\n        loginAsync\r\n    }\r\n}","D:\\Project\\new\\inventory_fe\\src\\component\\shared\\index.ts",[],"D:\\Project\\new\\inventory_fe\\src\\utils\\index.ts",[],"D:\\Project\\new\\inventory_fe\\src\\utils\\regex.ts",[],"D:\\Project\\new\\inventory_fe\\src\\utils\\helpers.ts",[],"D:\\Project\\new\\inventory_fe\\src\\utils\\formaters.ts",[],"D:\\Project\\new\\inventory_fe\\src\\component\\shared\\Header.tsx",["150"],"import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\ninterface IProps {\r\n    title: string\r\n    subTitle: string\r\n    backTo: string\r\n}\r\n\r\nconst Header = React.memo((props: IProps) => {\r\n    const { title, subTitle, backTo = '/' } = props\r\n\r\n    return <header>\r\n        <nav className=\"navbar navbar-expand-xl\">\r\n            <span className=\"navbar-brand page-title\">\r\n                {title}<br />\r\n                <small>{subTitle}</small>\r\n            </span>\r\n            <Link\r\n                className=\"btn-back\"\r\n                to={backTo}\r\n            >\r\n                <img src=\"./images/back.svg\" width=\"{9}\" />\r\n            </Link>\r\n        </nav>\r\n    </header>\r\n})\r\n\r\nexport default Header","D:\\Project\\new\\inventory_fe\\src\\models\\index.ts",[],"D:\\Project\\new\\inventory_fe\\src\\models\\account.ts",[],"D:\\Project\\new\\inventory_fe\\src\\models\\doctor.ts",[],"D:\\Project\\new\\inventory_fe\\src\\api\\index.ts",[],"D:\\Project\\new\\inventory_fe\\src\\api\\account.ts",["151"],"import { DoctorModel, LoginInfoModel } from '../models'\r\nimport client from './base'\r\nimport { decode } from \"jsonwebtoken\";\r\n\r\nexport type ILoginRequest = {\r\n    mEmail: string\r\n    mPassword: string\r\n}\r\n\r\nexport const login = async (payload: ILoginRequest): Promise<LoginInfoModel> => {\r\n    return await client.post('http://dev-api.medigo.xyz/admin/signin/basic', payload).then(res => {\r\n        const { loginSession, userInfo } = res?.data\r\n\r\n        return {\r\n            loginSession,\r\n            doctor: new DoctorModel(userInfo)\r\n        } as LoginInfoModel\r\n    })\r\n}\r\n\r\n// export const CONFIG = {\r\n//     TOKEN_FIELD: \"medigo_inventory_token\"\r\n// }\r\n\r\n// export const setToken = (token: string) => {\r\n//     if (typeof token == \"string\") {\r\n//         localStorage.setItem(CONFIG.TOKEN_FIELD, token);\r\n//     }\r\n// };\r\n\r\n// export const getToken = () => {\r\n//     const token = localStorage.getItem(CONFIG.TOKEN_FIELD);\r\n//     return token\r\n// };\r\n\r\n// export const removeToken = () => {\r\n//     localStorage.removeItem(CONFIG.TOKEN_FIELD);\r\n// };\r\n\r\n// export const getInfoFromToken = () => {\r\n//     const token = getToken();\r\n//     if (!token) return\r\n\r\n//     const info = decode(token)\r\n\r\n//     return info;\r\n// };\r\n\r\nexport const CONFIG = {\r\n    ACCOUNT_INFO_FIELD: \"MEDIGO_INVENTORY_ACCOUNT_INFO\"\r\n}\r\n\r\nexport const setAccountInfo = (accountInfo: LoginInfoModel) => {\r\n    localStorage.setItem(CONFIG.ACCOUNT_INFO_FIELD, JSON.stringify(accountInfo))\r\n}\r\n\r\nexport const getAccountInfo = () => {\r\n    const accountInfo: any = localStorage.getItem(CONFIG.ACCOUNT_INFO_FIELD)\r\n\r\n    return JSON.parse(accountInfo) as LoginInfoModel\r\n}","D:\\Project\\new\\inventory_fe\\src\\api\\base.ts",[],"D:\\Project\\new\\inventory_fe\\src\\hooks\\index.ts",[],"D:\\Project\\new\\inventory_fe\\src\\hooks\\useAsync.tsx",[],"D:\\Project\\new\\inventory_fe\\src\\component\\shared\\Button.tsx",[],"D:\\Project\\new\\inventory_fe\\src\\api\\pharmacy.ts",[],"D:\\Project\\new\\inventory_fe\\src\\models\\pharmacy.ts",[],"D:\\Project\\new\\inventory_fe\\src\\component\\shared\\Loading.tsx",[],"D:\\Project\\new\\inventory_fe\\src\\hooks\\useClickOutSide.tsx",["152"],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":2,"column":26,"nodeType":"159","messageId":"160","endLine":2,"endColumn":40},{"ruleId":"161","severity":1,"message":"162","line":17,"column":8,"nodeType":"163","endLine":17,"endColumn":10,"suggestions":"164"},{"ruleId":"157","severity":1,"message":"165","line":3,"column":5,"nodeType":"159","messageId":"160","endLine":3,"endColumn":19},{"ruleId":"157","severity":1,"message":"166","line":5,"column":27,"nodeType":"159","messageId":"160","endLine":5,"endColumn":50},{"ruleId":"167","severity":1,"message":"168","line":40,"column":19,"nodeType":"169","messageId":"170","endLine":40,"endColumn":21},{"ruleId":"171","severity":1,"message":"172","line":108,"column":29,"nodeType":"173","endLine":108,"endColumn":107},{"ruleId":"171","severity":1,"message":"172","line":111,"column":29,"nodeType":"173","endLine":111,"endColumn":112},{"ruleId":"167","severity":1,"message":"168","line":117,"column":49,"nodeType":"169","messageId":"170","endLine":117,"endColumn":51},{"ruleId":"167","severity":1,"message":"174","line":123,"column":61,"nodeType":"169","messageId":"170","endLine":123,"endColumn":63},{"ruleId":"171","severity":1,"message":"172","line":38,"column":21,"nodeType":"173","endLine":38,"endColumn":101},{"ruleId":"157","severity":1,"message":"175","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":13},{"ruleId":"171","severity":1,"message":"172","line":23,"column":17,"nodeType":"173","endLine":23,"endColumn":60},{"ruleId":"157","severity":1,"message":"176","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":16},{"ruleId":"161","severity":1,"message":"177","line":12,"column":8,"nodeType":"163","endLine":12,"endColumn":19,"suggestions":"178"},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"@typescript-eslint/no-unused-vars","'useRecoilValue' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAccountDataState'. Either include it or remove the dependency array.","ArrayExpression",["181"],"'selectorFamily' is defined but never used.","'IGetListPharmacyRequest' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '!==' and instead saw '!='.","'React' is defined but never used.","'decode' is defined but never used.","React Hook useEffect has a missing dependency: 'clickOutside'. Either include it or remove the dependency array.",["182"],"no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [setAccountDataState]",{"range":"187","text":"188"},"Update the dependencies array to be: [clickOutside, listRef]",{"range":"189","text":"190"},[590,592],"[setAccountDataState]",[446,457],"[clickOutside, listRef]"]